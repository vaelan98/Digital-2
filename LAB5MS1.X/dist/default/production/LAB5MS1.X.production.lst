

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Mon May 11 19:40:15 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	intentry,global,class=CODE,delta=2
    12                           	dabs	1,0x7E,2
    13  0000                     
    14                           ; Version 2.10
    15                           ; Generated 31/07/2019 GMT
    16                           ; 
    17                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC16F887 Definitions
    46                           ; 
    47                           ; SFR Addresses
    48  0000                     	;# 
    49  0001                     	;# 
    50  0002                     	;# 
    51  0003                     	;# 
    52  0004                     	;# 
    53  0005                     	;# 
    54  0006                     	;# 
    55  0007                     	;# 
    56  0008                     	;# 
    57  0009                     	;# 
    58  000A                     	;# 
    59  000B                     	;# 
    60  000C                     	;# 
    61  000D                     	;# 
    62  000E                     	;# 
    63  000E                     	;# 
    64  000F                     	;# 
    65  0010                     	;# 
    66  0011                     	;# 
    67  0012                     	;# 
    68  0013                     	;# 
    69  0014                     	;# 
    70  0015                     	;# 
    71  0015                     	;# 
    72  0016                     	;# 
    73  0017                     	;# 
    74  0018                     	;# 
    75  0019                     	;# 
    76  001A                     	;# 
    77  001B                     	;# 
    78  001B                     	;# 
    79  001C                     	;# 
    80  001D                     	;# 
    81  001E                     	;# 
    82  001F                     	;# 
    83  0081                     	;# 
    84  0085                     	;# 
    85  0086                     	;# 
    86  0087                     	;# 
    87  0088                     	;# 
    88  0089                     	;# 
    89  008C                     	;# 
    90  008D                     	;# 
    91  008E                     	;# 
    92  008F                     	;# 
    93  0090                     	;# 
    94  0091                     	;# 
    95  0092                     	;# 
    96  0093                     	;# 
    97  0093                     	;# 
    98  0093                     	;# 
    99  0094                     	;# 
   100  0095                     	;# 
   101  0096                     	;# 
   102  0097                     	;# 
   103  0098                     	;# 
   104  0099                     	;# 
   105  009A                     	;# 
   106  009B                     	;# 
   107  009C                     	;# 
   108  009D                     	;# 
   109  009E                     	;# 
   110  009F                     	;# 
   111  0105                     	;# 
   112  0107                     	;# 
   113  0108                     	;# 
   114  0109                     	;# 
   115  010C                     	;# 
   116  010C                     	;# 
   117  010D                     	;# 
   118  010E                     	;# 
   119  010F                     	;# 
   120  0185                     	;# 
   121  0187                     	;# 
   122  0188                     	;# 
   123  0189                     	;# 
   124  018C                     	;# 
   125  018D                     	;# 
   126  0000                     	;# 
   127  0001                     	;# 
   128  0002                     	;# 
   129  0003                     	;# 
   130  0004                     	;# 
   131  0005                     	;# 
   132  0006                     	;# 
   133  0007                     	;# 
   134  0008                     	;# 
   135  0009                     	;# 
   136  000A                     	;# 
   137  000B                     	;# 
   138  000C                     	;# 
   139  000D                     	;# 
   140  000E                     	;# 
   141  000E                     	;# 
   142  000F                     	;# 
   143  0010                     	;# 
   144  0011                     	;# 
   145  0012                     	;# 
   146  0013                     	;# 
   147  0014                     	;# 
   148  0015                     	;# 
   149  0015                     	;# 
   150  0016                     	;# 
   151  0017                     	;# 
   152  0018                     	;# 
   153  0019                     	;# 
   154  001A                     	;# 
   155  001B                     	;# 
   156  001B                     	;# 
   157  001C                     	;# 
   158  001D                     	;# 
   159  001E                     	;# 
   160  001F                     	;# 
   161  0081                     	;# 
   162  0085                     	;# 
   163  0086                     	;# 
   164  0087                     	;# 
   165  0088                     	;# 
   166  0089                     	;# 
   167  008C                     	;# 
   168  008D                     	;# 
   169  008E                     	;# 
   170  008F                     	;# 
   171  0090                     	;# 
   172  0091                     	;# 
   173  0092                     	;# 
   174  0093                     	;# 
   175  0093                     	;# 
   176  0093                     	;# 
   177  0094                     	;# 
   178  0095                     	;# 
   179  0096                     	;# 
   180  0097                     	;# 
   181  0098                     	;# 
   182  0099                     	;# 
   183  009A                     	;# 
   184  009B                     	;# 
   185  009C                     	;# 
   186  009D                     	;# 
   187  009E                     	;# 
   188  009F                     	;# 
   189  0105                     	;# 
   190  0107                     	;# 
   191  0108                     	;# 
   192  0109                     	;# 
   193  010C                     	;# 
   194  010C                     	;# 
   195  010D                     	;# 
   196  010E                     	;# 
   197  010F                     	;# 
   198  0185                     	;# 
   199  0187                     	;# 
   200  0188                     	;# 
   201  0189                     	;# 
   202  018C                     	;# 
   203  018D                     	;# 
   204  0000                     	;# 
   205  0001                     	;# 
   206  0002                     	;# 
   207  0003                     	;# 
   208  0004                     	;# 
   209  0005                     	;# 
   210  0006                     	;# 
   211  0007                     	;# 
   212  0008                     	;# 
   213  0009                     	;# 
   214  000A                     	;# 
   215  000B                     	;# 
   216  000C                     	;# 
   217  000D                     	;# 
   218  000E                     	;# 
   219  000E                     	;# 
   220  000F                     	;# 
   221  0010                     	;# 
   222  0011                     	;# 
   223  0012                     	;# 
   224  0013                     	;# 
   225  0014                     	;# 
   226  0015                     	;# 
   227  0015                     	;# 
   228  0016                     	;# 
   229  0017                     	;# 
   230  0018                     	;# 
   231  0019                     	;# 
   232  001A                     	;# 
   233  001B                     	;# 
   234  001B                     	;# 
   235  001C                     	;# 
   236  001D                     	;# 
   237  001E                     	;# 
   238  001F                     	;# 
   239  0081                     	;# 
   240  0085                     	;# 
   241  0086                     	;# 
   242  0087                     	;# 
   243  0088                     	;# 
   244  0089                     	;# 
   245  008C                     	;# 
   246  008D                     	;# 
   247  008E                     	;# 
   248  008F                     	;# 
   249  0090                     	;# 
   250  0091                     	;# 
   251  0092                     	;# 
   252  0093                     	;# 
   253  0093                     	;# 
   254  0093                     	;# 
   255  0094                     	;# 
   256  0095                     	;# 
   257  0096                     	;# 
   258  0097                     	;# 
   259  0098                     	;# 
   260  0099                     	;# 
   261  009A                     	;# 
   262  009B                     	;# 
   263  009C                     	;# 
   264  009D                     	;# 
   265  009E                     	;# 
   266  009F                     	;# 
   267  0105                     	;# 
   268  0107                     	;# 
   269  0108                     	;# 
   270  0109                     	;# 
   271  010C                     	;# 
   272  010C                     	;# 
   273  010D                     	;# 
   274  010E                     	;# 
   275  010F                     	;# 
   276  0185                     	;# 
   277  0187                     	;# 
   278  0188                     	;# 
   279  0189                     	;# 
   280  018C                     	;# 
   281  018D                     	;# 
   282  0006                     _PORTB	set	6
   283  001E                     _ADRESH	set	30
   284  0008                     _PORTD	set	8
   285  0006                     _PORTBbits	set	6
   286  0014                     _SSPCONbits	set	20
   287  000C                     _PIR1bits	set	12
   288  0013                     _SSPBUF	set	19
   289  0014                     _SSPCON	set	20
   290  0063                     _SSPIF	set	99
   291  005E                     _PEIE	set	94
   292  005F                     _GIE	set	95
   293  0088                     _TRISD	set	136
   294  0086                     _TRISB	set	134
   295  0094                     _SSPSTATbits	set	148
   296  0091                     _SSPCON2bits	set	145
   297  0087                     _TRISCbits	set	135
   298  0094                     _SSPSTAT	set	148
   299  0093                     _SSPADD	set	147
   300  0091                     _SSPCON2	set	145
   301  04A0                     _BF	set	1184
   302  0463                     _SSPIE	set	1123
   303  0189                     _ANSELH	set	393
   304  0188                     _ANSEL	set	392
   305                           
   306                           ; #config settings
   307  0000                     
   308                           	psect	cinit
   309  000F                     start_initialization:	
   310  000F                     __initialization:	
   311                           
   312                           ; Clear objects allocated to COMMON
   313  000F  01F7               	clrf	__pbssCOMMON& (0+127)
   314  0010  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
   315  0011  01F9               	clrf	(__pbssCOMMON+2)& (0+127)
   316  0012  01FA               	clrf	(__pbssCOMMON+3)& (0+127)
   317  0013                     end_of_initialization:	
   318                           ;End of C runtime variable initialization code
   319                           
   320  0013                     __end_of__initialization:	
   321  0013  0183               	clrf	3
   322  0014  120A  118A  287D   	ljmp	_main	;jump to C main() function
   323                           
   324                           	psect	bssCOMMON
   325  0077                     __pbssCOMMON:	
   326  0077                     _coso2:	
   327  0077                     	ds	1
   328  0078                     _a:	
   329  0078                     	ds	1
   330  0079                     _dato:	
   331  0079                     	ds	1
   332  007A                     _z:	
   333  007A                     	ds	1
   334                           
   335                           	psect	cstackCOMMON
   336  0070                     __pcstackCOMMON:	
   337  0070                     ?_setup:	
   338  0070                     ?_I2C_Slave_Init:	
   339                           ; 1 bytes @ 0x0
   340                           
   341  0070                     ?_isr:	
   342                           ; 1 bytes @ 0x0
   343                           
   344  0070                     ??_isr:	
   345                           ; 1 bytes @ 0x0
   346                           
   347  0070                     ?_main:	
   348                           ; 1 bytes @ 0x0
   349                           
   350                           
   351                           ; 1 bytes @ 0x0
   352  0070                     	ds	3
   353  0073                     ??_I2C_Slave_Init:	
   354  0073                     I2C_Slave_Init@address:	
   355                           ; 1 bytes @ 0x3
   356                           
   357                           
   358                           ; 1 bytes @ 0x3
   359  0073                     	ds	1
   360  0074                     ??_setup:	
   361  0074                     ??_main:	
   362                           ; 1 bytes @ 0x4
   363                           
   364                           
   365                           ; 1 bytes @ 0x4
   366  0074                     	ds	3
   367                           
   368                           	psect	maintext
   369  007D                     __pmaintext:	
   370 ;;
   371 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   372 ;;
   373 ;; *************** function _main *****************
   374 ;; Defined at:
   375 ;;		line 94 in file "slaveMotorS1.c"
   376 ;; Parameters:    Size  Location     Type
   377 ;;		None
   378 ;; Auto vars:     Size  Location     Type
   379 ;;		None
   380 ;; Return value:  Size  Location     Type
   381 ;;                  1    wreg      void 
   382 ;; Registers used:
   383 ;;		wreg, status,2, status,0, pclath, cstack
   384 ;; Tracked objects:
   385 ;;		On entry : B00/0
   386 ;;		On exit  : 0/0
   387 ;;		Unchanged: 0/0
   388 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   389 ;;      Params:         0       0       0       0       0
   390 ;;      Locals:         0       0       0       0       0
   391 ;;      Temps:          3       0       0       0       0
   392 ;;      Totals:         3       0       0       0       0
   393 ;;Total ram usage:        3 bytes
   394 ;; Hardware stack levels required when called:    3
   395 ;; This function calls:
   396 ;;		_setup
   397 ;; This function is called by:
   398 ;;		Startup code after reset
   399 ;; This function uses a non-reentrant model
   400 ;;
   401                           
   402                           
   403                           ;psect for function _main
   404  007D                     _main:	
   405  007D                     l811:	
   406                           ;incstack = 0
   407                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   408                           
   409                           
   410                           ;slaveMotorS1.c: 95:     setup();
   411  007D  120A  118A  20BC  120A  118A  	fcall	_setup
   412  0082                     l813:	
   413                           
   414                           ;slaveMotorS1.c: 102:                   if (a==1){
   415  0082  0378               	decf	_a,w
   416  0083  1D03               	btfss	3,2
   417  0084  2886               	goto	u141
   418  0085  2887               	goto	u140
   419  0086                     u141:	
   420  0086  2896               	goto	l819
   421  0087                     u140:	
   422  0087                     l815:	
   423                           
   424                           ;slaveMotorS1.c: 103:                    PORTBbits.RB0=1;
   425  0087  1283               	bcf	3,5	;RP0=0, select bank0
   426  0088  1303               	bcf	3,6	;RP1=0, select bank0
   427  0089  1406               	bsf	6,0	;volatile
   428  008A                     l817:	
   429                           
   430                           ;slaveMotorS1.c: 104:                    _delay((unsigned long)((200)*(8000000/4000.0)))
      +                          ;
   431  008A  3003               	movlw	3
   432  008B  00F6               	movwf	??_main+2
   433  008C  3008               	movlw	8
   434  008D  00F5               	movwf	??_main+1
   435  008E  3077               	movlw	119
   436  008F  00F4               	movwf	??_main
   437  0090                     u157:	
   438  0090  0BF4               	decfsz	??_main,f
   439  0091  2890               	goto	u157
   440  0092  0BF5               	decfsz	??_main+1,f
   441  0093  2890               	goto	u157
   442  0094  0BF6               	decfsz	??_main+2,f
   443  0095  2890               	goto	u157
   444  0096                     l819:	
   445                           
   446                           ;slaveMotorS1.c: 106:                   PORTBbits.RB0=0;
   447  0096  1283               	bcf	3,5	;RP0=0, select bank0
   448  0097  1303               	bcf	3,6	;RP1=0, select bank0
   449  0098  1006               	bcf	6,0	;volatile
   450  0099                     l821:	
   451                           
   452                           ;slaveMotorS1.c: 107:                   a=0;
   453  0099  01F8               	clrf	_a
   454  009A                     l823:	
   455                           
   456                           ;slaveMotorS1.c: 108:                  coso2= ADRESH;
   457  009A  081E               	movf	30,w	;volatile
   458  009B  00F4               	movwf	??_main
   459  009C  0874               	movf	??_main,w
   460  009D  00F7               	movwf	_coso2
   461  009E  2882               	goto	l813
   462  009F  120A  118A  280C   	ljmp	start
   463  00A2                     __end_of_main:	
   464                           
   465                           	psect	text1
   466  00BC                     __ptext1:	
   467 ;; *************** function _setup *****************
   468 ;; Defined at:
   469 ;;		line 115 in file "slaveMotorS1.c"
   470 ;; Parameters:    Size  Location     Type
   471 ;;		None
   472 ;; Auto vars:     Size  Location     Type
   473 ;;		None
   474 ;; Return value:  Size  Location     Type
   475 ;;                  1    wreg      void 
   476 ;; Registers used:
   477 ;;		wreg, status,2, status,0, pclath, cstack
   478 ;; Tracked objects:
   479 ;;		On entry : 0/0
   480 ;;		On exit  : 0/0
   481 ;;		Unchanged: 0/0
   482 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   483 ;;      Params:         0       0       0       0       0
   484 ;;      Locals:         0       0       0       0       0
   485 ;;      Temps:          0       0       0       0       0
   486 ;;      Totals:         0       0       0       0       0
   487 ;;Total ram usage:        0 bytes
   488 ;; Hardware stack levels used:    1
   489 ;; Hardware stack levels required when called:    2
   490 ;; This function calls:
   491 ;;		_I2C_Slave_Init
   492 ;; This function is called by:
   493 ;;		_main
   494 ;; This function uses a non-reentrant model
   495 ;;
   496                           
   497                           
   498                           ;psect for function _setup
   499  00BC                     _setup:	
   500  00BC                     l731:	
   501                           ;incstack = 0
   502                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
   503                           
   504                           
   505                           ;slaveMotorS1.c: 116:     ANSEL = 0;
   506  00BC  1683               	bsf	3,5	;RP0=1, select bank3
   507  00BD  1703               	bsf	3,6	;RP1=1, select bank3
   508  00BE  0188               	clrf	8	;volatile
   509                           
   510                           ;slaveMotorS1.c: 117:     ANSELH = 0;
   511  00BF  0189               	clrf	9	;volatile
   512                           
   513                           ;slaveMotorS1.c: 119:     TRISB = 0;
   514  00C0  1683               	bsf	3,5	;RP0=1, select bank1
   515  00C1  1303               	bcf	3,6	;RP1=0, select bank1
   516  00C2  0186               	clrf	6	;volatile
   517                           
   518                           ;slaveMotorS1.c: 120:     TRISD = 0;
   519  00C3  0188               	clrf	8	;volatile
   520                           
   521                           ;slaveMotorS1.c: 122:     PORTB = 0;
   522  00C4  1283               	bcf	3,5	;RP0=0, select bank0
   523  00C5  1303               	bcf	3,6	;RP1=0, select bank0
   524  00C6  0186               	clrf	6	;volatile
   525                           
   526                           ;slaveMotorS1.c: 123:     PORTD = 0;
   527  00C7  0188               	clrf	8	;volatile
   528  00C8                     l733:	
   529                           
   530                           ;slaveMotorS1.c: 124:     PORTBbits.RB1=1;
   531  00C8  1486               	bsf	6,1	;volatile
   532  00C9                     l735:	
   533                           
   534                           ;slaveMotorS1.c: 125:     I2C_Slave_Init(0x90);
   535  00C9  3090               	movlw	144
   536  00CA  120A  118A  20A2  120A  118A  	fcall	_I2C_Slave_Init
   537  00CF                     l121:	
   538  00CF  0008               	return
   539  00D0                     __end_of_setup:	
   540                           
   541                           	psect	text2
   542  00A2                     __ptext2:	
   543 ;; *************** function _I2C_Slave_Init *****************
   544 ;; Defined at:
   545 ;;		line 93 in file "I2C.c"
   546 ;; Parameters:    Size  Location     Type
   547 ;;  address         1    wreg     unsigned char 
   548 ;; Auto vars:     Size  Location     Type
   549 ;;  address         1    3[COMMON] unsigned char 
   550 ;; Return value:  Size  Location     Type
   551 ;;                  1    wreg      void 
   552 ;; Registers used:
   553 ;;		wreg
   554 ;; Tracked objects:
   555 ;;		On entry : 0/0
   556 ;;		On exit  : 0/0
   557 ;;		Unchanged: 0/0
   558 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   559 ;;      Params:         0       0       0       0       0
   560 ;;      Locals:         1       0       0       0       0
   561 ;;      Temps:          0       0       0       0       0
   562 ;;      Totals:         1       0       0       0       0
   563 ;;Total ram usage:        1 bytes
   564 ;; Hardware stack levels used:    1
   565 ;; Hardware stack levels required when called:    1
   566 ;; This function calls:
   567 ;;		Nothing
   568 ;; This function is called by:
   569 ;;		_setup
   570 ;; This function uses a non-reentrant model
   571 ;;
   572                           
   573                           
   574                           ;psect for function _I2C_Slave_Init
   575  00A2                     _I2C_Slave_Init:	
   576                           
   577                           ;incstack = 0
   578                           ; Regs used in _I2C_Slave_Init: [wreg]
   579                           ;I2C_Slave_Init@address stored from wreg
   580  00A2  00F3               	movwf	I2C_Slave_Init@address
   581  00A3                     l713:	
   582                           
   583                           ;I2C.c: 95:     SSPADD = address;
   584  00A3  0873               	movf	I2C_Slave_Init@address,w
   585  00A4  1683               	bsf	3,5	;RP0=1, select bank1
   586  00A5  1303               	bcf	3,6	;RP1=0, select bank1
   587  00A6  0093               	movwf	19	;volatile
   588                           
   589                           ;I2C.c: 96:     SSPCON = 0x36;
   590  00A7  3036               	movlw	54
   591  00A8  1283               	bcf	3,5	;RP0=0, select bank0
   592  00A9  1303               	bcf	3,6	;RP1=0, select bank0
   593  00AA  0094               	movwf	20	;volatile
   594                           
   595                           ;I2C.c: 97:     SSPSTAT = 0x80;
   596  00AB  3080               	movlw	128
   597  00AC  1683               	bsf	3,5	;RP0=1, select bank1
   598  00AD  1303               	bcf	3,6	;RP1=0, select bank1
   599  00AE  0094               	movwf	20	;volatile
   600                           
   601                           ;I2C.c: 98:     SSPCON2 = 0x01;
   602  00AF  3001               	movlw	1
   603  00B0  0091               	movwf	17	;volatile
   604  00B1                     l715:	
   605                           
   606                           ;I2C.c: 99:     TRISCbits.TRISC4 = 1;
   607  00B1  1607               	bsf	7,4	;volatile
   608  00B2                     l717:	
   609                           
   610                           ;I2C.c: 100:     TRISCbits.TRISC3 = 1;
   611  00B2  1587               	bsf	7,3	;volatile
   612  00B3                     l719:	
   613                           
   614                           ;I2C.c: 101:     GIE = 1;
   615  00B3  178B               	bsf	11,7	;volatile
   616  00B4                     l721:	
   617                           
   618                           ;I2C.c: 102:     PEIE = 1;
   619  00B4  170B               	bsf	11,6	;volatile
   620  00B5                     l723:	
   621                           
   622                           ;I2C.c: 103:     SSPIF = 0;
   623  00B5  1283               	bcf	3,5	;RP0=0, select bank0
   624  00B6  1303               	bcf	3,6	;RP1=0, select bank0
   625  00B7  118C               	bcf	12,3	;volatile
   626  00B8                     l725:	
   627                           
   628                           ;I2C.c: 104:     SSPIE = 1;
   629  00B8  1683               	bsf	3,5	;RP0=1, select bank1
   630  00B9  1303               	bcf	3,6	;RP1=0, select bank1
   631  00BA  158C               	bsf	12,3	;volatile
   632  00BB                     l51:	
   633  00BB  0008               	return
   634  00BC                     __end_of_I2C_Slave_Init:	
   635                           
   636                           	psect	text3
   637  0017                     __ptext3:	
   638 ;; *************** function _isr *****************
   639 ;; Defined at:
   640 ;;		line 53 in file "slaveMotorS1.c"
   641 ;; Parameters:    Size  Location     Type
   642 ;;		None
   643 ;; Auto vars:     Size  Location     Type
   644 ;;		None
   645 ;; Return value:  Size  Location     Type
   646 ;;                  1    wreg      void 
   647 ;; Registers used:
   648 ;;		wreg
   649 ;; Tracked objects:
   650 ;;		On entry : 0/0
   651 ;;		On exit  : 0/0
   652 ;;		Unchanged: 0/0
   653 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   654 ;;      Params:         0       0       0       0       0
   655 ;;      Locals:         0       0       0       0       0
   656 ;;      Temps:          3       0       0       0       0
   657 ;;      Totals:         3       0       0       0       0
   658 ;;Total ram usage:        3 bytes
   659 ;; Hardware stack levels used:    1
   660 ;; This function calls:
   661 ;;		Nothing
   662 ;; This function is called by:
   663 ;;		Interrupt level 1
   664 ;; This function uses a non-reentrant model
   665 ;;
   666                           
   667                           
   668                           ;psect for function _isr
   669  0017                     _isr:	
   670  0017                     i1l777:	
   671                           
   672                           ;slaveMotorS1.c: 54:    if(PIR1bits.SSPIF == 1){
   673  0017  1283               	bcf	3,5	;RP0=0, select bank0
   674  0018  1303               	bcf	3,6	;RP1=0, select bank0
   675  0019  1D8C               	btfss	12,3	;volatile
   676  001A  281C               	goto	u5_21
   677  001B  281D               	goto	u5_20
   678  001C                     u5_21:	
   679  001C  2876               	goto	i1l109
   680  001D                     u5_20:	
   681  001D                     i1l779:	
   682                           
   683                           ;slaveMotorS1.c: 56:         SSPCONbits.CKP = 0;
   684  001D  1214               	bcf	20,4	;volatile
   685                           
   686                           ;slaveMotorS1.c: 57:         a=1;
   687  001E  01F8               	clrf	_a
   688  001F  0AF8               	incf	_a,f
   689                           
   690                           ;slaveMotorS1.c: 58:        PORTBbits.RB0=1;
   691  0020  1406               	bsf	6,0	;volatile
   692                           
   693                           ;slaveMotorS1.c: 61:         if ((SSPCONbits.SSPOV) || (SSPCONbits.WCOL)){
   694  0021  1B14               	btfsc	20,6	;volatile
   695  0022  2824               	goto	u6_21
   696  0023  2825               	goto	u6_20
   697  0024                     u6_21:	
   698  0024  2829               	goto	i1l783
   699  0025                     u6_20:	
   700  0025                     i1l781:	
   701  0025  1F94               	btfss	20,7	;volatile
   702  0026  2828               	goto	u7_21
   703  0027  2829               	goto	u7_20
   704  0028                     u7_21:	
   705  0028  2830               	goto	i1l791
   706  0029                     u7_20:	
   707  0029                     i1l783:	
   708                           
   709                           ;slaveMotorS1.c: 62:             z = SSPBUF;
   710  0029  0813               	movf	19,w	;volatile
   711  002A  00F0               	movwf	??_isr
   712  002B  0870               	movf	??_isr,w
   713  002C  00FA               	movwf	_z
   714  002D                     i1l785:	
   715                           
   716                           ;slaveMotorS1.c: 63:             SSPCONbits.SSPOV = 0;
   717  002D  1314               	bcf	20,6	;volatile
   718  002E                     i1l787:	
   719                           
   720                           ;slaveMotorS1.c: 64:             SSPCONbits.WCOL = 0;
   721  002E  1394               	bcf	20,7	;volatile
   722  002F                     i1l789:	
   723                           
   724                           ;slaveMotorS1.c: 65:             SSPCONbits.CKP = 1;
   725  002F  1614               	bsf	20,4	;volatile
   726  0030                     i1l791:	
   727                           
   728                           ;slaveMotorS1.c: 68:         if(!SSPSTATbits.D_nA && !SSPSTATbits.R_nW) {
   729  0030  1683               	bsf	3,5	;RP0=1, select bank1
   730  0031  1303               	bcf	3,6	;RP1=0, select bank1
   731  0032  1A94               	btfsc	20,5	;volatile
   732  0033  2835               	goto	u8_21
   733  0034  2836               	goto	u8_20
   734  0035                     u8_21:	
   735  0035  2852               	goto	i1l100
   736  0036                     u8_20:	
   737  0036                     i1l793:	
   738  0036  1914               	btfsc	20,2	;volatile
   739  0037  2839               	goto	u9_21
   740  0038  283A               	goto	u9_20
   741  0039                     u9_21:	
   742  0039  2852               	goto	i1l100
   743  003A                     u9_20:	
   744  003A                     i1l795:	
   745                           
   746                           ;slaveMotorS1.c: 70:             z = SSPBUF;
   747  003A  1283               	bcf	3,5	;RP0=0, select bank0
   748  003B  1303               	bcf	3,6	;RP1=0, select bank0
   749  003C  0813               	movf	19,w	;volatile
   750  003D  00F0               	movwf	??_isr
   751  003E  0870               	movf	??_isr,w
   752  003F  00FA               	movwf	_z
   753  0040                     i1l797:	
   754                           
   755                           ;slaveMotorS1.c: 73:             PIR1bits.SSPIF = 0;
   756  0040  118C               	bcf	12,3	;volatile
   757  0041                     i1l799:	
   758                           
   759                           ;slaveMotorS1.c: 74:             SSPCONbits.CKP = 1;
   760  0041  1614               	bsf	20,4	;volatile
   761  0042                     i1l101:	
   762                           ;slaveMotorS1.c: 75:             while(!SSPSTATbits.BF);
   763                           
   764  0042  1683               	bsf	3,5	;RP0=1, select bank1
   765  0043  1303               	bcf	3,6	;RP1=0, select bank1
   766  0044  1C14               	btfss	20,0	;volatile
   767  0045  2847               	goto	u10_21
   768  0046  2848               	goto	u10_20
   769  0047                     u10_21:	
   770  0047  2842               	goto	i1l101
   771  0048                     u10_20:	
   772  0048                     i1l801:	
   773                           
   774                           ;slaveMotorS1.c: 76:             PORTD = SSPBUF;
   775  0048  1283               	bcf	3,5	;RP0=0, select bank0
   776  0049  1303               	bcf	3,6	;RP1=0, select bank0
   777  004A  0813               	movf	19,w	;volatile
   778  004B  0088               	movwf	8	;volatile
   779                           
   780                           ;slaveMotorS1.c: 77:             _delay((unsigned long)((250)*(8000000/4000000.0)));
   781  004C  30A6               	movlw	166
   782  004D  00F0               	movwf	??_isr
   783  004E                     u16_27:	
   784  004E  0BF0               	decfsz	??_isr,f
   785  004F  284E               	goto	u16_27
   786  0050  0000               	nop
   787                           
   788                           ;slaveMotorS1.c: 79:         }else if(!SSPSTATbits.D_nA && SSPSTATbits.R_nW){
   789  0051  2873               	goto	i1l104
   790  0052                     i1l100:	
   791  0052  1A94               	btfsc	20,5	;volatile
   792  0053  2855               	goto	u11_21
   793  0054  2856               	goto	u11_20
   794  0055                     u11_21:	
   795  0055  2873               	goto	i1l104
   796  0056                     u11_20:	
   797  0056                     i1l803:	
   798  0056  1D14               	btfss	20,2	;volatile
   799  0057  2859               	goto	u12_21
   800  0058  285A               	goto	u12_20
   801  0059                     u12_21:	
   802  0059  2873               	goto	i1l104
   803  005A                     u12_20:	
   804  005A                     i1l805:	
   805                           
   806                           ;slaveMotorS1.c: 80:             z = SSPBUF;
   807  005A  1283               	bcf	3,5	;RP0=0, select bank0
   808  005B  1303               	bcf	3,6	;RP1=0, select bank0
   809  005C  0813               	movf	19,w	;volatile
   810  005D  00F0               	movwf	??_isr
   811  005E  0870               	movf	??_isr,w
   812  005F  00FA               	movwf	_z
   813  0060                     i1l807:	
   814                           
   815                           ;slaveMotorS1.c: 81:             BF = 0;
   816  0060  1683               	bsf	3,5	;RP0=1, select bank1
   817  0061  1303               	bcf	3,6	;RP1=0, select bank1
   818  0062  1014               	bcf	20,0	;volatile
   819                           
   820                           ;slaveMotorS1.c: 82:             SSPBUF = ADRESH;
   821  0063  1283               	bcf	3,5	;RP0=0, select bank0
   822  0064  1303               	bcf	3,6	;RP1=0, select bank0
   823  0065  081E               	movf	30,w	;volatile
   824  0066  0093               	movwf	19	;volatile
   825  0067                     i1l809:	
   826                           
   827                           ;slaveMotorS1.c: 83:             SSPCONbits.CKP = 1;
   828  0067  1614               	bsf	20,4	;volatile
   829                           
   830                           ;slaveMotorS1.c: 84:             _delay((unsigned long)((250)*(8000000/4000000.0)));
   831  0068  30A6               	movlw	166
   832  0069  00F0               	movwf	??_isr
   833  006A                     u17_27:	
   834  006A  0BF0               	decfsz	??_isr,f
   835  006B  286A               	goto	u17_27
   836  006C  0000               	nop
   837  006D                     i1l106:	
   838                           ;slaveMotorS1.c: 85:             while(SSPSTATbits.BF);
   839                           
   840  006D  1683               	bsf	3,5	;RP0=1, select bank1
   841  006E  1303               	bcf	3,6	;RP1=0, select bank1
   842  006F  1814               	btfsc	20,0	;volatile
   843  0070  2872               	goto	u13_21
   844  0071  2873               	goto	u13_20
   845  0072                     u13_21:	
   846  0072  286D               	goto	i1l106
   847  0073                     u13_20:	
   848  0073                     i1l104:	
   849                           
   850                           ;slaveMotorS1.c: 88:         PIR1bits.SSPIF = 0;
   851  0073  1283               	bcf	3,5	;RP0=0, select bank0
   852  0074  1303               	bcf	3,6	;RP1=0, select bank0
   853  0075  118C               	bcf	12,3	;volatile
   854  0076                     i1l109:	
   855  0076  0872               	movf	??_isr+2,w
   856  0077  008A               	movwf	10
   857  0078  0E71               	swapf	(??_isr+1)^(0+4294967168),w
   858  0079  0083               	movwf	3
   859  007A  0EFE               	swapf	btemp,f
   860  007B  0E7E               	swapf	btemp,w
   861  007C  0009               	retfie
   862  007D                     __end_of_isr:	
   863  007E                     btemp	set	126	;btemp
   864  007E                     wtemp0	set	126
   865                           
   866                           	psect	intentry
   867  0004                     __pintentry:	
   868                           ;incstack = 0
   869                           ; Regs used in _isr: [wreg]
   870                           
   871  0004                     interrupt_function:	
   872  007E                     saved_w	set	btemp
   873  0004  00FE               	movwf	btemp
   874  0005  0E03               	swapf	3,w
   875  0006  00F1               	movwf	??_isr+1
   876  0007  080A               	movf	10,w
   877  0008  00F2               	movwf	??_isr+2
   878  0009  120A  118A  2817   	ljmp	_isr


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      11
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _setup->_I2C_Slave_Init

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0      15
                                              4 COMMON     3     3      0
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0      15
                     _I2C_Slave_Init
 ---------------------------------------------------------------------------------
 (2) _I2C_Slave_Init                                       1     1      0      15
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _setup
     _I2C_Slave_Init

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       B       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       B      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Mon May 11 19:40:15 2020

                       _a 0078                         _z 007A               __CFG_CP$OFF 0000  
             _SSPSTATbits 0094                        _BF 04A0                        l51 00BB  
                     l121 00CF                       l721 00B4                       l713 00A3  
                     l723 00B5                       l715 00B1                       l731 00BC  
                     l811 007D                       l725 00B8                       l717 00B2  
                     l733 00C8                       l821 0099                       l813 0082  
                     l719 00B3                       l735 00C9                       l823 009A  
                     l815 0087                       l817 008A                       l819 0096  
                     _GIE 005F                       u140 0087                       u141 0086  
                     u157 0090              __CFG_CPD$OFF 0000                       _isr 0017  
            __CFG_LVP$OFF 0000                      ?_isr 0070                      _PEIE 005E  
                    u5_20 001D                      u5_21 001C                      u6_20 0025  
                    u6_21 0024                      u7_20 0029                      u7_21 0028  
                    u8_20 0036                      u8_21 0035                      u9_20 003A  
                    u9_21 0039              __CFG_WRT$OFF 0000                      _dato 0079  
                    _main 007D                      btemp 007E                      start 000C  
           __CFG_IESO$OFF 0000                     ??_isr 0070                     ?_main 0070  
           __CFG_WDTE$OFF 0000                     _ANSEL 0188                     i1l100 0052  
                   i1l101 0042                     i1l104 0073                     i1l106 006D  
                   i1l109 0076                     i1l801 0048                     i1l803 0056  
                   i1l805 005A                     i1l807 0060                     i1l809 0067  
                   i1l781 0025                     i1l791 0030                     i1l783 0029  
                   i1l793 0036                     i1l785 002D                     i1l777 0017  
                   i1l795 003A                     i1l787 002E                     i1l779 001D  
                   i1l797 0040                     i1l789 002F                     i1l799 0041  
                   u10_20 0048                     u10_21 0047                     u11_20 0056  
                   u11_21 0055                     u12_20 005A                     u12_21 0059  
                   u13_20 0073                     u13_21 0072                     u16_27 004E  
                   u17_27 006A                     _PORTB 0006                     _PORTD 0008  
                   _TRISB 0086                     _TRISD 0088                     _SSPIE 0463  
                   _SSPIF 0063            __CFG_FCMEN$OFF 0000                     _coso2 0077  
                   _setup 00BC            __CFG_BOREN$OFF 0000                     pclath 000A  
                   status 0003                     wtemp0 007E            __CFG_MCLRE$OFF 0000  
         __initialization 000F              __end_of_main 00A2                    ??_main 0074  
                  _ADRESH 001E                    ?_setup 0070                    _ANSELH 0189  
                  _SSPADD 0093                    _SSPCON 0014                    _SSPBUF 0013  
          __CFG_PWRTE$OFF 0000                    saved_w 007E   __end_of__initialization 0013  
          __pcstackCOMMON 0070   __size_of_I2C_Slave_Init 001A             __end_of_setup 00D0  
                 ??_setup 0074     I2C_Slave_Init@address 0073                __pmaintext 007D  
              __pintentry 0004                   _SSPCON2 0091                   _SSPSTAT 0094  
                 __ptext1 00BC                   __ptext2 00A2                   __ptext3 0017  
            __size_of_isr 0066      end_of_initialization 0013            _I2C_Slave_Init 00A2  
               _PORTBbits 0006                 _TRISCbits 0087    __end_of_I2C_Slave_Init 00BC  
     start_initialization 000F               __end_of_isr 007D  __CFG_FOSC$INTRC_NOCLKOUT 0000  
         ?_I2C_Slave_Init 0070               __pbssCOMMON 0077                 ___latbits 0002  
          __size_of_setup 0014         interrupt_function 0004                  _PIR1bits 000C  
       __CFG_BOR4V$BOR40V 0000          ??_I2C_Slave_Init 0073             __size_of_main 0025  
                intlevel1 0000               _SSPCON2bits 0091                _SSPCONbits 0014  
