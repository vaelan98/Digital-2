

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Fri Feb 21 14:14:44 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	dabs	1,0x7E,2
    14  0000                     
    15                           ; Version 2.10
    16                           ; Generated 31/07/2019 GMT
    17                           ; 
    18                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC16F887 Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     	;# 
    50  0001                     	;# 
    51  0002                     	;# 
    52  0003                     	;# 
    53  0004                     	;# 
    54  0005                     	;# 
    55  0006                     	;# 
    56  0007                     	;# 
    57  0008                     	;# 
    58  0009                     	;# 
    59  000A                     	;# 
    60  000B                     	;# 
    61  000C                     	;# 
    62  000D                     	;# 
    63  000E                     	;# 
    64  000E                     	;# 
    65  000F                     	;# 
    66  0010                     	;# 
    67  0011                     	;# 
    68  0012                     	;# 
    69  0013                     	;# 
    70  0014                     	;# 
    71  0015                     	;# 
    72  0015                     	;# 
    73  0016                     	;# 
    74  0017                     	;# 
    75  0018                     	;# 
    76  0019                     	;# 
    77  001A                     	;# 
    78  001B                     	;# 
    79  001B                     	;# 
    80  001C                     	;# 
    81  001D                     	;# 
    82  001E                     	;# 
    83  001F                     	;# 
    84  0081                     	;# 
    85  0085                     	;# 
    86  0086                     	;# 
    87  0087                     	;# 
    88  0088                     	;# 
    89  0089                     	;# 
    90  008C                     	;# 
    91  008D                     	;# 
    92  008E                     	;# 
    93  008F                     	;# 
    94  0090                     	;# 
    95  0091                     	;# 
    96  0092                     	;# 
    97  0093                     	;# 
    98  0093                     	;# 
    99  0093                     	;# 
   100  0094                     	;# 
   101  0095                     	;# 
   102  0096                     	;# 
   103  0097                     	;# 
   104  0098                     	;# 
   105  0099                     	;# 
   106  009A                     	;# 
   107  009B                     	;# 
   108  009C                     	;# 
   109  009D                     	;# 
   110  009E                     	;# 
   111  009F                     	;# 
   112  0105                     	;# 
   113  0107                     	;# 
   114  0108                     	;# 
   115  0109                     	;# 
   116  010C                     	;# 
   117  010C                     	;# 
   118  010D                     	;# 
   119  010E                     	;# 
   120  010F                     	;# 
   121  0185                     	;# 
   122  0187                     	;# 
   123  0188                     	;# 
   124  0189                     	;# 
   125  018C                     	;# 
   126  018D                     	;# 
   127  0000                     	;# 
   128  0001                     	;# 
   129  0002                     	;# 
   130  0003                     	;# 
   131  0004                     	;# 
   132  0005                     	;# 
   133  0006                     	;# 
   134  0007                     	;# 
   135  0008                     	;# 
   136  0009                     	;# 
   137  000A                     	;# 
   138  000B                     	;# 
   139  000C                     	;# 
   140  000D                     	;# 
   141  000E                     	;# 
   142  000E                     	;# 
   143  000F                     	;# 
   144  0010                     	;# 
   145  0011                     	;# 
   146  0012                     	;# 
   147  0013                     	;# 
   148  0014                     	;# 
   149  0015                     	;# 
   150  0015                     	;# 
   151  0016                     	;# 
   152  0017                     	;# 
   153  0018                     	;# 
   154  0019                     	;# 
   155  001A                     	;# 
   156  001B                     	;# 
   157  001B                     	;# 
   158  001C                     	;# 
   159  001D                     	;# 
   160  001E                     	;# 
   161  001F                     	;# 
   162  0081                     	;# 
   163  0085                     	;# 
   164  0086                     	;# 
   165  0087                     	;# 
   166  0088                     	;# 
   167  0089                     	;# 
   168  008C                     	;# 
   169  008D                     	;# 
   170  008E                     	;# 
   171  008F                     	;# 
   172  0090                     	;# 
   173  0091                     	;# 
   174  0092                     	;# 
   175  0093                     	;# 
   176  0093                     	;# 
   177  0093                     	;# 
   178  0094                     	;# 
   179  0095                     	;# 
   180  0096                     	;# 
   181  0097                     	;# 
   182  0098                     	;# 
   183  0099                     	;# 
   184  009A                     	;# 
   185  009B                     	;# 
   186  009C                     	;# 
   187  009D                     	;# 
   188  009E                     	;# 
   189  009F                     	;# 
   190  0105                     	;# 
   191  0107                     	;# 
   192  0108                     	;# 
   193  0109                     	;# 
   194  010C                     	;# 
   195  010C                     	;# 
   196  010D                     	;# 
   197  010E                     	;# 
   198  010F                     	;# 
   199  0185                     	;# 
   200  0187                     	;# 
   201  0188                     	;# 
   202  0189                     	;# 
   203  018C                     	;# 
   204  018D                     	;# 
   205  0000                     	;# 
   206  0001                     	;# 
   207  0002                     	;# 
   208  0003                     	;# 
   209  0004                     	;# 
   210  0005                     	;# 
   211  0006                     	;# 
   212  0007                     	;# 
   213  0008                     	;# 
   214  0009                     	;# 
   215  000A                     	;# 
   216  000B                     	;# 
   217  000C                     	;# 
   218  000D                     	;# 
   219  000E                     	;# 
   220  000E                     	;# 
   221  000F                     	;# 
   222  0010                     	;# 
   223  0011                     	;# 
   224  0012                     	;# 
   225  0013                     	;# 
   226  0014                     	;# 
   227  0015                     	;# 
   228  0015                     	;# 
   229  0016                     	;# 
   230  0017                     	;# 
   231  0018                     	;# 
   232  0019                     	;# 
   233  001A                     	;# 
   234  001B                     	;# 
   235  001B                     	;# 
   236  001C                     	;# 
   237  001D                     	;# 
   238  001E                     	;# 
   239  001F                     	;# 
   240  0081                     	;# 
   241  0085                     	;# 
   242  0086                     	;# 
   243  0087                     	;# 
   244  0088                     	;# 
   245  0089                     	;# 
   246  008C                     	;# 
   247  008D                     	;# 
   248  008E                     	;# 
   249  008F                     	;# 
   250  0090                     	;# 
   251  0091                     	;# 
   252  0092                     	;# 
   253  0093                     	;# 
   254  0093                     	;# 
   255  0093                     	;# 
   256  0094                     	;# 
   257  0095                     	;# 
   258  0096                     	;# 
   259  0097                     	;# 
   260  0098                     	;# 
   261  0099                     	;# 
   262  009A                     	;# 
   263  009B                     	;# 
   264  009C                     	;# 
   265  009D                     	;# 
   266  009E                     	;# 
   267  009F                     	;# 
   268  0105                     	;# 
   269  0107                     	;# 
   270  0108                     	;# 
   271  0109                     	;# 
   272  010C                     	;# 
   273  010C                     	;# 
   274  010D                     	;# 
   275  010E                     	;# 
   276  010F                     	;# 
   277  0185                     	;# 
   278  0187                     	;# 
   279  0188                     	;# 
   280  0189                     	;# 
   281  018C                     	;# 
   282  018D                     	;# 
   283  0013                     _SSPBUF	set	19
   284  0014                     _SSPCON	set	20
   285  000C                     _PIR1bits	set	12
   286  000B                     _INTCONbits	set	11
   287  0009                     _PORTE	set	9
   288  0006                     _PORTB	set	6
   289  001E                     _ADRESH	set	30
   290  0008                     _PORTD	set	8
   291  001F                     _ADCON0bits	set	31
   292  0094                     _SSPSTATbits	set	148
   293  0094                     _SSPSTAT	set	148
   294  0085                     _TRISAbits	set	133
   295  008C                     _PIE1bits	set	140
   296  0089                     _TRISE	set	137
   297  0088                     _TRISD	set	136
   298  0086                     _TRISB	set	134
   299  009F                     _ADCON1bits	set	159
   300  043B                     _TRISC3	set	1083
   301  043D                     _TRISC5	set	1085
   302  0188                     _ANSELbits	set	392
   303  0189                     _ANSELH	set	393
   304  0188                     _ANSEL	set	392
   305                           
   306                           ; #config settings
   307  0000                     
   308                           	psect	cinit
   309  07F8                     start_initialization:	
   310  07F8                     __initialization:	
   311                           
   312                           ; Clear objects allocated to COMMON
   313  07F8  01F7               	clrf	__pbssCOMMON& (0+127)
   314  07F9  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
   315  07FA  01F9               	clrf	(__pbssCOMMON+2)& (0+127)
   316  07FB  01FA               	clrf	(__pbssCOMMON+3)& (0+127)
   317  07FC                     end_of_initialization:	
   318                           ;End of C runtime variable initialization code
   319                           
   320  07FC                     __end_of__initialization:	
   321  07FC  0183               	clrf	3
   322  07FD  120A  118A  2F69   	ljmp	_main	;jump to C main() function
   323                           
   324                           	psect	bssCOMMON
   325  0077                     __pbssCOMMON:	
   326  0077                     _valor:	
   327  0077                     	ds	1
   328  0078                     _valor2:	
   329  0078                     	ds	1
   330  0079                     _coso2:	
   331  0079                     	ds	1
   332  007A                     _coso:	
   333  007A                     	ds	1
   334                           
   335                           	psect	cstackCOMMON
   336  0070                     __pcstackCOMMON:	
   337  0070                     ?_setup:	
   338  0070                     ?_spiRead:	
   339                           ; 1 bytes @ 0x0
   340                           
   341  0070                     ??_spiRead:	
   342                           ; 1 bytes @ 0x0
   343                           
   344  0070                     ?_spiWrite:	
   345                           ; 1 bytes @ 0x0
   346                           
   347  0070                     ??_spiWrite:	
   348                           ; 1 bytes @ 0x0
   349                           
   350  0070                     ?_spiInit:	
   351                           ; 1 bytes @ 0x0
   352                           
   353  0070                     ?_main:	
   354                           ; 1 bytes @ 0x0
   355                           
   356  0070                     ?_spiReceiveWait:	
   357                           ; 1 bytes @ 0x0
   358                           
   359  0070                     ??_spiReceiveWait:	
   360                           ; 1 bytes @ 0x0
   361                           
   362  0070                     spiInit@sDataSample:	
   363                           ; 1 bytes @ 0x0
   364                           
   365  0070                     spiWrite@dat:	
   366                           ; 1 bytes @ 0x0
   367                           
   368                           
   369                           ; 1 bytes @ 0x0
   370  0070                     	ds	1
   371  0071                     spiInit@sClockIdle:	
   372                           
   373                           ; 1 bytes @ 0x1
   374  0071                     	ds	1
   375  0072                     spiInit@sTransmitEdge:	
   376                           
   377                           ; 1 bytes @ 0x2
   378  0072                     	ds	1
   379  0073                     ??_spiInit:	
   380  0073                     spiInit@sType:	
   381                           ; 1 bytes @ 0x3
   382                           
   383                           
   384                           ; 1 bytes @ 0x3
   385  0073                     	ds	1
   386  0074                     ??_setup:	
   387  0074                     ??_main:	
   388                           ; 1 bytes @ 0x4
   389                           
   390                           
   391                           ; 1 bytes @ 0x4
   392  0074                     	ds	3
   393                           
   394                           	psect	maintext
   395  0769                     __pmaintext:	
   396 ;;
   397 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   398 ;;
   399 ;; *************** function _main *****************
   400 ;; Defined at:
   401 ;;		line 58 in file "slave4.c"
   402 ;; Parameters:    Size  Location     Type
   403 ;;		None
   404 ;; Auto vars:     Size  Location     Type
   405 ;;		None
   406 ;; Return value:  Size  Location     Type
   407 ;;                  1    wreg      void 
   408 ;; Registers used:
   409 ;;		wreg, status,2, status,0, pclath, cstack
   410 ;; Tracked objects:
   411 ;;		On entry : B00/0
   412 ;;		On exit  : 0/0
   413 ;;		Unchanged: 0/0
   414 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   415 ;;      Params:         0       0       0       0       0
   416 ;;      Locals:         0       0       0       0       0
   417 ;;      Temps:          3       0       0       0       0
   418 ;;      Totals:         3       0       0       0       0
   419 ;;Total ram usage:        3 bytes
   420 ;; Hardware stack levels required when called:    2
   421 ;; This function calls:
   422 ;;		_setup
   423 ;;		_spiRead
   424 ;;		_spiWrite
   425 ;; This function is called by:
   426 ;;		Startup code after reset
   427 ;; This function uses a non-reentrant model
   428 ;;
   429                           
   430                           
   431                           ;psect for function _main
   432  0769                     _main:	
   433  0769                     l841:	
   434                           ;incstack = 0
   435                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   436                           
   437                           
   438                           ;slave4.c: 59:     setup();
   439  0769  120A  118A  273C  120A  118A  	fcall	_setup
   440  076E                     l843:	
   441                           
   442                           ;slave4.c: 60:    ADCON0bits.ADCS1=1;
   443  076E  1283               	bcf	3,5	;RP0=0, select bank0
   444  076F  1303               	bcf	3,6	;RP1=0, select bank0
   445  0770  179F               	bsf	31,7	;volatile
   446  0771                     l845:	
   447                           
   448                           ;slave4.c: 61:     ADCON0bits.ADCS0=0;
   449  0771  131F               	bcf	31,6	;volatile
   450  0772                     l847:	
   451                           
   452                           ;slave4.c: 65:     ADCON1bits.ADFM =0 ;
   453  0772  1683               	bsf	3,5	;RP0=1, select bank1
   454  0773  1303               	bcf	3,6	;RP1=0, select bank1
   455  0774  139F               	bcf	31,7	;volatile
   456  0775                     l849:	
   457                           
   458                           ;slave4.c: 66:     ADCON1bits.VCFG1=0 ;
   459  0775  129F               	bcf	31,5	;volatile
   460  0776                     l851:	
   461                           
   462                           ;slave4.c: 67:     ADCON1bits.VCFG0=0 ;
   463  0776  121F               	bcf	31,4	;volatile
   464  0777                     l853:	
   465                           
   466                           ;slave4.c: 69:     ADCON0bits.ADON=1;
   467  0777  1283               	bcf	3,5	;RP0=0, select bank0
   468  0778  1303               	bcf	3,6	;RP1=0, select bank0
   469  0779  141F               	bsf	31,0	;volatile
   470  077A                     l855:	
   471                           
   472                           ;slave4.c: 70:     valor=0;
   473  077A  01F7               	clrf	_valor
   474  077B                     l857:	
   475                           
   476                           ;slave4.c: 71:     valor2=255;
   477  077B  30FF               	movlw	255
   478  077C  00F4               	movwf	??_main
   479  077D  0874               	movf	??_main,w
   480  077E  00F8               	movwf	_valor2
   481  077F                     l859:	
   482                           
   483                           ;slave4.c: 72:      _delay((unsigned long)((330)*(4000000/4000.0)));
   484  077F  3002               	movlw	2
   485  0780  00F6               	movwf	??_main+2
   486  0781  30AD               	movlw	173
   487  0782  00F5               	movwf	??_main+1
   488  0783  308F               	movlw	143
   489  0784  00F4               	movwf	??_main
   490  0785                     u107:	
   491  0785  0BF4               	decfsz	??_main,f
   492  0786  2F85               	goto	u107
   493  0787  0BF5               	decfsz	??_main+1,f
   494  0788  2F85               	goto	u107
   495  0789  0BF6               	decfsz	??_main+2,f
   496  078A  2F85               	goto	u107
   497  078B                     l861:	
   498                           
   499                           ;slave4.c: 80:          PORTD = spiRead();
   500  078B  120A  118A  271D  120A  118A  	fcall	_spiRead
   501  0790  1283               	bcf	3,5	;RP0=0, select bank0
   502  0791  1303               	bcf	3,6	;RP1=0, select bank0
   503  0792  0088               	movwf	8	;volatile
   504  0793                     l863:	
   505                           
   506                           ;slave4.c: 82:         _delay((unsigned long)((1)*(4000000/4000.0)));
   507  0793  30C7               	movlw	199
   508  0794  00F4               	movwf	??_main
   509  0795                     u117:	
   510  0795  2F96               	nop2
   511  0796  0BF4               	decfsz	??_main,f
   512  0797  2F95               	goto	u117
   513  0798  2F99               	nop2
   514  0799  2F9A               	nop2
   515  079A                     l865:	
   516                           
   517                           ;slave4.c: 84:          if(PORTD==0){
   518  079A  1283               	bcf	3,5	;RP0=0, select bank0
   519  079B  1303               	bcf	3,6	;RP1=0, select bank0
   520  079C  0808               	movf	8,w	;volatile
   521  079D  1D03               	btfss	3,2
   522  079E  2FA0               	goto	u71
   523  079F  2FA1               	goto	u70
   524  07A0                     u71:	
   525  07A0  2FCC               	goto	l879
   526  07A1                     u70:	
   527  07A1                     l867:	
   528                           
   529                           ;slave4.c: 86:             ADCON0bits.CHS = 0b0001;
   530  07A1  081F               	movf	31,w	;volatile
   531  07A2  39C3               	andlw	-61
   532  07A3  3804               	iorlw	4
   533  07A4  009F               	movwf	31	;volatile
   534  07A5                     l869:	
   535                           
   536                           ;slave4.c: 87:              _delay((unsigned long)((20)*(4000000/4000.0)));
   537  07A5  301A               	movlw	26
   538  07A6  00F5               	movwf	??_main+1
   539  07A7  30F8               	movlw	248
   540  07A8  00F4               	movwf	??_main
   541  07A9                     u127:	
   542  07A9  0BF4               	decfsz	??_main,f
   543  07AA  2FA9               	goto	u127
   544  07AB  0BF5               	decfsz	??_main+1,f
   545  07AC  2FA9               	goto	u127
   546  07AD  0000               	nop
   547  07AE                     l871:	
   548                           
   549                           ;slave4.c: 88:             ADCON0bits.GO=1;
   550  07AE  1283               	bcf	3,5	;RP0=0, select bank0
   551  07AF  1303               	bcf	3,6	;RP1=0, select bank0
   552  07B0  149F               	bsf	31,1	;volatile
   553                           
   554                           ;slave4.c: 89:             while(ADCON0bits.GO){
   555  07B1  2FC5               	goto	l877
   556  07B2                     l873:	
   557                           
   558                           ;slave4.c: 91:                  coso2= ADRESH;
   559  07B2  081E               	movf	30,w	;volatile
   560  07B3  00F4               	movwf	??_main
   561  07B4  0874               	movf	??_main,w
   562  07B5  00F9               	movwf	_coso2
   563                           
   564                           ;slave4.c: 92:                   _delay((unsigned long)((100)*(4000000/4000.0)));
   565  07B6  3082               	movlw	130
   566  07B7  00F5               	movwf	??_main+1
   567  07B8  30DD               	movlw	221
   568  07B9  00F4               	movwf	??_main
   569  07BA                     u137:	
   570  07BA  0BF4               	decfsz	??_main,f
   571  07BB  2FBA               	goto	u137
   572  07BC  0BF5               	decfsz	??_main+1,f
   573  07BD  2FBA               	goto	u137
   574  07BE  2FBF               	nop2
   575  07BF                     l875:	
   576                           
   577                           ;slave4.c: 93:                  spiWrite(coso2);
   578  07BF  0879               	movf	_coso2,w
   579  07C0  120A  118A  2710  120A  118A  	fcall	_spiWrite
   580  07C5                     l877:	
   581                           
   582                           ;slave4.c: 89:             while(ADCON0bits.GO){
   583  07C5  1283               	bcf	3,5	;RP0=0, select bank0
   584  07C6  1303               	bcf	3,6	;RP1=0, select bank0
   585  07C7  189F               	btfsc	31,1	;volatile
   586  07C8  2FCA               	goto	u81
   587  07C9  2FCB               	goto	u80
   588  07CA                     u81:	
   589  07CA  2FB2               	goto	l873
   590  07CB                     u80:	
   591  07CB  2F8B               	goto	l861
   592  07CC                     l879:	
   593                           
   594                           ;slave4.c: 98:             ADCON0bits.CHS = 0b0000;
   595  07CC  30C3               	movlw	-61
   596  07CD  059F               	andwf	31,f	;volatile
   597  07CE                     l881:	
   598                           
   599                           ;slave4.c: 99:              _delay((unsigned long)((20)*(4000000/4000.0)));
   600  07CE  301A               	movlw	26
   601  07CF  00F5               	movwf	??_main+1
   602  07D0  30F8               	movlw	248
   603  07D1  00F4               	movwf	??_main
   604  07D2                     u147:	
   605  07D2  0BF4               	decfsz	??_main,f
   606  07D3  2FD2               	goto	u147
   607  07D4  0BF5               	decfsz	??_main+1,f
   608  07D5  2FD2               	goto	u147
   609  07D6  0000               	nop
   610  07D7                     l883:	
   611                           
   612                           ;slave4.c: 100:             ADCON0bits.GO=1;
   613  07D7  1283               	bcf	3,5	;RP0=0, select bank0
   614  07D8  1303               	bcf	3,6	;RP1=0, select bank0
   615  07D9  149F               	bsf	31,1	;volatile
   616                           
   617                           ;slave4.c: 101:             while(ADCON0bits.GO){
   618  07DA  2FEE               	goto	l889
   619  07DB                     l885:	
   620                           
   621                           ;slave4.c: 102:                 coso=ADRESH;
   622  07DB  081E               	movf	30,w	;volatile
   623  07DC  00F4               	movwf	??_main
   624  07DD  0874               	movf	??_main,w
   625  07DE  00FA               	movwf	_coso
   626                           
   627                           ;slave4.c: 103:                  _delay((unsigned long)((100)*(4000000/4000.0)));
   628  07DF  3082               	movlw	130
   629  07E0  00F5               	movwf	??_main+1
   630  07E1  30DD               	movlw	221
   631  07E2  00F4               	movwf	??_main
   632  07E3                     u157:	
   633  07E3  0BF4               	decfsz	??_main,f
   634  07E4  2FE3               	goto	u157
   635  07E5  0BF5               	decfsz	??_main+1,f
   636  07E6  2FE3               	goto	u157
   637  07E7  2FE8               	nop2
   638  07E8                     l887:	
   639                           
   640                           ;slave4.c: 105:                 spiWrite(coso);
   641  07E8  087A               	movf	_coso,w
   642  07E9  120A  118A  2710  120A  118A  	fcall	_spiWrite
   643  07EE                     l889:	
   644                           
   645                           ;slave4.c: 101:             while(ADCON0bits.GO){
   646  07EE  1283               	bcf	3,5	;RP0=0, select bank0
   647  07EF  1303               	bcf	3,6	;RP1=0, select bank0
   648  07F0  189F               	btfsc	31,1	;volatile
   649  07F1  2FF3               	goto	u91
   650  07F2  2FF4               	goto	u90
   651  07F3                     u91:	
   652  07F3  2FDB               	goto	l885
   653  07F4                     u90:	
   654  07F4  2F8B               	goto	l861
   655  07F5  120A  118A  2800   	ljmp	start
   656  07F8                     __end_of_main:	
   657                           
   658                           	psect	text1
   659  0710                     __ptext1:	
   660 ;; *************** function _spiWrite *****************
   661 ;; Defined at:
   662 ;;		line 34 in file "SPI.c"
   663 ;; Parameters:    Size  Location     Type
   664 ;;  dat             1    wreg     unsigned char 
   665 ;; Auto vars:     Size  Location     Type
   666 ;;  dat             1    0[COMMON] unsigned char 
   667 ;; Return value:  Size  Location     Type
   668 ;;                  1    wreg      void 
   669 ;; Registers used:
   670 ;;		wreg
   671 ;; Tracked objects:
   672 ;;		On entry : 0/0
   673 ;;		On exit  : 0/0
   674 ;;		Unchanged: 0/0
   675 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   676 ;;      Params:         0       0       0       0       0
   677 ;;      Locals:         1       0       0       0       0
   678 ;;      Temps:          0       0       0       0       0
   679 ;;      Totals:         1       0       0       0       0
   680 ;;Total ram usage:        1 bytes
   681 ;; Hardware stack levels used:    1
   682 ;; This function calls:
   683 ;;		Nothing
   684 ;; This function is called by:
   685 ;;		_main
   686 ;; This function uses a non-reentrant model
   687 ;;
   688                           
   689                           
   690                           ;psect for function _spiWrite
   691  0710                     _spiWrite:	
   692                           
   693                           ;incstack = 0
   694                           ; Regs used in _spiWrite: [wreg]
   695                           ;spiWrite@dat stored from wreg
   696  0710  00F0               	movwf	spiWrite@dat
   697  0711                     l743:	
   698                           
   699                           ;SPI.c: 34: void spiWrite(char dat);SPI.c: 35: {;SPI.c: 36:     SSPBUF = dat;
   700  0711  0870               	movf	spiWrite@dat,w
   701  0712  1283               	bcf	3,5	;RP0=0, select bank0
   702  0713  1303               	bcf	3,6	;RP1=0, select bank0
   703  0714  0093               	movwf	19	;volatile
   704  0715                     l95:	
   705  0715  0008               	return
   706  0716                     __end_of_spiWrite:	
   707                           
   708                           	psect	text2
   709  071D                     __ptext2:	
   710 ;; *************** function _spiRead *****************
   711 ;; Defined at:
   712 ;;		line 47 in file "SPI.c"
   713 ;; Parameters:    Size  Location     Type
   714 ;;		None
   715 ;; Auto vars:     Size  Location     Type
   716 ;;		None
   717 ;; Return value:  Size  Location     Type
   718 ;;                  1    wreg      unsigned char 
   719 ;; Registers used:
   720 ;;		wreg, status,2, status,0, pclath, cstack
   721 ;; Tracked objects:
   722 ;;		On entry : 0/0
   723 ;;		On exit  : 0/0
   724 ;;		Unchanged: 0/0
   725 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   726 ;;      Params:         0       0       0       0       0
   727 ;;      Locals:         0       0       0       0       0
   728 ;;      Temps:          0       0       0       0       0
   729 ;;      Totals:         0       0       0       0       0
   730 ;;Total ram usage:        0 bytes
   731 ;; Hardware stack levels used:    1
   732 ;; Hardware stack levels required when called:    1
   733 ;; This function calls:
   734 ;;		_spiReceiveWait
   735 ;; This function is called by:
   736 ;;		_main
   737 ;; This function uses a non-reentrant model
   738 ;;
   739                           
   740                           
   741                           ;psect for function _spiRead
   742  071D                     _spiRead:	
   743  071D                     l737:	
   744                           ;incstack = 0
   745                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
   746                           
   747                           
   748                           ;SPI.c: 49:     spiReceiveWait();
   749  071D  120A  118A  2716  120A  118A  	fcall	_spiReceiveWait
   750  0722                     l739:	
   751                           
   752                           ;SPI.c: 50:     return(SSPBUF);
   753  0722  1283               	bcf	3,5	;RP0=0, select bank0
   754  0723  1303               	bcf	3,6	;RP1=0, select bank0
   755  0724  0813               	movf	19,w	;volatile
   756  0725                     l103:	
   757  0725  0008               	return
   758  0726                     __end_of_spiRead:	
   759                           
   760                           	psect	text3
   761  0716                     __ptext3:	
   762 ;; *************** function _spiReceiveWait *****************
   763 ;; Defined at:
   764 ;;		line 29 in file "SPI.c"
   765 ;; Parameters:    Size  Location     Type
   766 ;;		None
   767 ;; Auto vars:     Size  Location     Type
   768 ;;		None
   769 ;; Return value:  Size  Location     Type
   770 ;;                  1    wreg      void 
   771 ;; Registers used:
   772 ;;		None
   773 ;; Tracked objects:
   774 ;;		On entry : 0/0
   775 ;;		On exit  : 0/0
   776 ;;		Unchanged: 0/0
   777 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   778 ;;      Params:         0       0       0       0       0
   779 ;;      Locals:         0       0       0       0       0
   780 ;;      Temps:          0       0       0       0       0
   781 ;;      Totals:         0       0       0       0       0
   782 ;;Total ram usage:        0 bytes
   783 ;; Hardware stack levels used:    1
   784 ;; This function calls:
   785 ;;		Nothing
   786 ;; This function is called by:
   787 ;;		_spiRead
   788 ;; This function uses a non-reentrant model
   789 ;;
   790                           
   791                           
   792                           ;psect for function _spiReceiveWait
   793  0716                     _spiReceiveWait:	
   794  0716                     l705:	
   795                           ;incstack = 0
   796                           ; Regs used in _spiReceiveWait: []
   797                           
   798  0716                     l89:	
   799                           ;SPI.c: 31:     while ( !SSPSTATbits.BF );
   800                           
   801  0716  1683               	bsf	3,5	;RP0=1, select bank1
   802  0717  1303               	bcf	3,6	;RP1=0, select bank1
   803  0718  1C14               	btfss	20,0	;volatile
   804  0719  2F1B               	goto	u21
   805  071A  2F1C               	goto	u20
   806  071B                     u21:	
   807  071B  2F16               	goto	l89
   808  071C                     u20:	
   809  071C                     l92:	
   810  071C  0008               	return
   811  071D                     __end_of_spiReceiveWait:	
   812                           
   813                           	psect	text4
   814  073C                     __ptext4:	
   815 ;; *************** function _setup *****************
   816 ;; Defined at:
   817 ;;		line 111 in file "slave4.c"
   818 ;; Parameters:    Size  Location     Type
   819 ;;		None
   820 ;; Auto vars:     Size  Location     Type
   821 ;;		None
   822 ;; Return value:  Size  Location     Type
   823 ;;                  1    wreg      void 
   824 ;; Registers used:
   825 ;;		wreg, status,2, status,0, pclath, cstack
   826 ;; Tracked objects:
   827 ;;		On entry : 0/0
   828 ;;		On exit  : 0/0
   829 ;;		Unchanged: 0/0
   830 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   831 ;;      Params:         0       0       0       0       0
   832 ;;      Locals:         0       0       0       0       0
   833 ;;      Temps:          0       0       0       0       0
   834 ;;      Totals:         0       0       0       0       0
   835 ;;Total ram usage:        0 bytes
   836 ;; Hardware stack levels used:    1
   837 ;; Hardware stack levels required when called:    1
   838 ;; This function calls:
   839 ;;		_spiInit
   840 ;; This function is called by:
   841 ;;		_main
   842 ;; This function uses a non-reentrant model
   843 ;;
   844                           
   845                           
   846                           ;psect for function _setup
   847  073C                     _setup:	
   848  073C                     l811:	
   849                           ;incstack = 0
   850                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
   851                           
   852                           
   853                           ;slave4.c: 112:     ANSEL = 0;
   854  073C  1683               	bsf	3,5	;RP0=1, select bank3
   855  073D  1703               	bsf	3,6	;RP1=1, select bank3
   856  073E  0188               	clrf	8	;volatile
   857  073F                     l813:	
   858                           
   859                           ;slave4.c: 113:     ANSELH=1;
   860  073F  3001               	movlw	1
   861  0740  0089               	movwf	9	;volatile
   862  0741                     l815:	
   863                           
   864                           ;slave4.c: 115:     TRISB = 1;
   865  0741  3001               	movlw	1
   866  0742  1683               	bsf	3,5	;RP0=1, select bank1
   867  0743  1303               	bcf	3,6	;RP1=0, select bank1
   868  0744  0086               	movwf	6	;volatile
   869                           
   870                           ;slave4.c: 116:     TRISD = 0;
   871  0745  0188               	clrf	8	;volatile
   872                           
   873                           ;slave4.c: 118:     PORTB = 0;
   874  0746  1283               	bcf	3,5	;RP0=0, select bank0
   875  0747  1303               	bcf	3,6	;RP1=0, select bank0
   876  0748  0186               	clrf	6	;volatile
   877                           
   878                           ;slave4.c: 119:     PORTD = 0;
   879  0749  0188               	clrf	8	;volatile
   880                           
   881                           ;slave4.c: 120:     PORTE=0;
   882  074A  0189               	clrf	9	;volatile
   883                           
   884                           ;slave4.c: 121:     TRISE=0;
   885  074B  1683               	bsf	3,5	;RP0=1, select bank1
   886  074C  1303               	bcf	3,6	;RP1=0, select bank1
   887  074D  0189               	clrf	9	;volatile
   888  074E                     l817:	
   889                           
   890                           ;slave4.c: 122:     INTCONbits.GIE = 1;
   891  074E  178B               	bsf	11,7	;volatile
   892  074F                     l819:	
   893                           
   894                           ;slave4.c: 123:     INTCONbits.PEIE = 1;
   895  074F  170B               	bsf	11,6	;volatile
   896  0750                     l821:	
   897                           
   898                           ;slave4.c: 124:     PIR1bits.SSPIF = 0;
   899  0750  1283               	bcf	3,5	;RP0=0, select bank0
   900  0751  1303               	bcf	3,6	;RP1=0, select bank0
   901  0752  118C               	bcf	12,3	;volatile
   902  0753                     l823:	
   903                           
   904                           ;slave4.c: 125:     PIE1bits.SSPIE = 1;
   905  0753  1683               	bsf	3,5	;RP0=1, select bank1
   906  0754  1303               	bcf	3,6	;RP1=0, select bank1
   907  0755  158C               	bsf	12,3	;volatile
   908  0756                     l825:	
   909                           
   910                           ;slave4.c: 127:     TRISAbits.TRISA5 = 1;
   911  0756  1685               	bsf	5,5	;volatile
   912  0757                     l827:	
   913                           
   914                           ;slave4.c: 128:     TRISAbits.TRISA0 = 1;
   915  0757  1405               	bsf	5,0	;volatile
   916  0758                     l829:	
   917                           
   918                           ;slave4.c: 129:     TRISAbits.TRISA1 = 1;
   919  0758  1485               	bsf	5,1	;volatile
   920  0759                     l831:	
   921                           
   922                           ;slave4.c: 130:     TRISAbits.TRISA2 = 1;
   923  0759  1505               	bsf	5,2	;volatile
   924  075A                     l833:	
   925                           
   926                           ;slave4.c: 131:     ANSELbits.ANS0=1;
   927  075A  1683               	bsf	3,5	;RP0=1, select bank3
   928  075B  1703               	bsf	3,6	;RP1=1, select bank3
   929  075C  1408               	bsf	8,0	;volatile
   930  075D                     l835:	
   931                           
   932                           ;slave4.c: 132:     ANSELbits.ANS1=1;
   933  075D  1488               	bsf	8,1	;volatile
   934  075E                     l837:	
   935                           
   936                           ;slave4.c: 133:     ANSELbits.ANS2=1;
   937  075E  1508               	bsf	8,2	;volatile
   938  075F                     l839:	
   939                           
   940                           ;slave4.c: 134:     spiInit(SPI_SLAVE_SS_DIS, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_LOW
      +                          , SPI_IDLE_2_ACTIVE);
   941  075F  01F0               	clrf	spiInit@sDataSample
   942  0760  01F1               	clrf	spiInit@sClockIdle
   943  0761  01F2               	clrf	spiInit@sTransmitEdge
   944  0762  3025               	movlw	37
   945  0763  120A  118A  2726  120A  118A  	fcall	_spiInit
   946  0768                     l69:	
   947  0768  0008               	return
   948  0769                     __end_of_setup:	
   949                           
   950                           	psect	text5
   951  0726                     __ptext5:	
   952 ;; *************** function _spiInit *****************
   953 ;; Defined at:
   954 ;;		line 12 in file "SPI.c"
   955 ;; Parameters:    Size  Location     Type
   956 ;;  sType           1    wreg     enum E1264
   957 ;;  sDataSample     1    0[COMMON] enum E1272
   958 ;;  sClockIdle      1    1[COMMON] enum E1276
   959 ;;  sTransmitEdg    1    2[COMMON] enum E1280
   960 ;; Auto vars:     Size  Location     Type
   961 ;;  sType           1    3[COMMON] enum E1264
   962 ;; Return value:  Size  Location     Type
   963 ;;                  1    wreg      void 
   964 ;; Registers used:
   965 ;;		wreg, status,2, status,0
   966 ;; Tracked objects:
   967 ;;		On entry : 0/0
   968 ;;		On exit  : 0/0
   969 ;;		Unchanged: 0/0
   970 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   971 ;;      Params:         3       0       0       0       0
   972 ;;      Locals:         1       0       0       0       0
   973 ;;      Temps:          0       0       0       0       0
   974 ;;      Totals:         4       0       0       0       0
   975 ;;Total ram usage:        4 bytes
   976 ;; Hardware stack levels used:    1
   977 ;; This function calls:
   978 ;;		Nothing
   979 ;; This function is called by:
   980 ;;		_setup
   981 ;; This function uses a non-reentrant model
   982 ;;
   983                           
   984                           
   985                           ;psect for function _spiInit
   986  0726                     _spiInit:	
   987                           
   988                           ;incstack = 0
   989                           ; Regs used in _spiInit: [wreg+status,2+status,0]
   990                           ;spiInit@sType stored from wreg
   991  0726  00F3               	movwf	spiInit@sType
   992  0727                     l801:	
   993                           
   994                           ;SPI.c: 12: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 13: {;SPI.c: 14:     TRISC5 = 0;
   995  0727  1683               	bsf	3,5	;RP0=1, select bank1
   996  0728  1303               	bcf	3,6	;RP1=0, select bank1
   997  0729  1287               	bcf	7,5	;volatile
   998                           
   999                           ;SPI.c: 15:     if(sType & 0b00000100)
  1000  072A  1D73               	btfss	spiInit@sType,2
  1001  072B  2F2D               	goto	u61
  1002  072C  2F2E               	goto	u60
  1003  072D                     u61:	
  1004  072D  2F32               	goto	l807
  1005  072E                     u60:	
  1006  072E                     l803:	
  1007                           
  1008                           ;SPI.c: 16:     {;SPI.c: 17:         SSPSTAT = sTransmitEdge;
  1009  072E  0872               	movf	spiInit@sTransmitEdge,w
  1010  072F  0094               	movwf	20	;volatile
  1011  0730                     l805:	
  1012                           
  1013                           ;SPI.c: 18:         TRISC3 = 1;
  1014  0730  1587               	bsf	7,3	;volatile
  1015                           
  1016                           ;SPI.c: 19:     }
  1017  0731  2F36               	goto	l85
  1018  0732                     l807:	
  1019                           
  1020                           ;SPI.c: 21:     {;SPI.c: 22:         SSPSTAT = sDataSample | sTransmitEdge;
  1021  0732  0870               	movf	spiInit@sDataSample,w
  1022  0733  0472               	iorwf	spiInit@sTransmitEdge,w
  1023  0734  0094               	movwf	20	;volatile
  1024  0735                     l809:	
  1025                           
  1026                           ;SPI.c: 23:         TRISC3 = 0;
  1027  0735  1187               	bcf	7,3	;volatile
  1028  0736                     l85:	
  1029                           ;SPI.c: 24:     }
  1030                           
  1031                           
  1032                           ;SPI.c: 26:     SSPCON = sType | sClockIdle;
  1033  0736  0873               	movf	spiInit@sType,w
  1034  0737  0471               	iorwf	spiInit@sClockIdle,w
  1035  0738  1283               	bcf	3,5	;RP0=0, select bank0
  1036  0739  1303               	bcf	3,6	;RP1=0, select bank0
  1037  073A  0094               	movwf	20	;volatile
  1038  073B                     l86:	
  1039  073B  0008               	return
  1040  073C                     __end_of_spiInit:	
  1041  007E                     btemp	set	126	;btemp
  1042  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      11
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _setup->_spiInit

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0     375
                                              4 COMMON     3     3      0
                              _setup
                            _spiRead
                           _spiWrite
 ---------------------------------------------------------------------------------
 (1) _spiWrite                                             1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (2) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     360
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     360
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _setup
     _spiInit
   _spiRead
     _spiReceiveWait
   _spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       B       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       B      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Fri Feb 21 14:14:44 2020

             __CFG_CP$OFF 0000               _SSPSTATbits 0094                        l92 071C  
                      l85 0736                        l69 0768                        l86 073B  
                      l95 0715                        l89 0716                        u20 071C  
                      u21 071B                        u60 072E                        u61 072D  
                      u70 07A1                        u71 07A0                        u80 07CB  
                      u81 07CA                        u90 07F4                        u91 07F3  
                     l103 0725                       l801 0727                       l705 0716  
                     l803 072E                       l811 073C                       l805 0730  
                     l821 0750                       l813 073F                       l807 0732  
                     l831 0759                       l823 0753                       l815 0741  
                     l743 0711                       l809 0735                       l833 075A  
                     l825 0756                       l817 074E                       l737 071D  
                     l841 0769                       l835 075D                       l827 0757  
                     l819 074F                       l739 0722                       l851 0776  
                     l843 076E                       l837 075E                       l829 0758  
                     l861 078B                       l853 0777                       l845 0771  
                     l839 075F                       l871 07AE                       l863 0793  
                     l855 077A                       l847 0772                       l881 07CE  
                     l873 07B2                       l865 079A                       l857 077B  
                     l849 0775                       l883 07D7                       l875 07BF  
                     l867 07A1                       l859 077F                       l885 07DB  
                     l877 07C5                       l869 07A5                       l887 07E8  
                     l879 07CC                       l889 07EE                       u107 0785  
                     u117 0795                       u127 07A9                       u137 07BA  
                     u147 07D2                       u157 07E3              __CFG_CPD$OFF 0000  
            __CFG_LVP$OFF 0000              __CFG_WRT$OFF 0000                      _coso 007A  
                    _main 0769                      btemp 007E                      start 0000  
           __CFG_IESO$OFF 0000                     ?_main 0070             __CFG_WDTE$OFF 0000  
                   _ANSEL 0188                     _PORTB 0006                     _PORTD 0008  
                   _PORTE 0009                     _TRISB 0086                     _TRISD 0088  
                   _TRISE 0089            __CFG_FCMEN$OFF 0000                     _coso2 0079  
                   _valor 0077                     _setup 073C            __CFG_BOREN$OFF 0000  
         __end_of_spiInit 073C           __end_of_spiRead 0726                     status 0003  
                   wtemp0 007E            __CFG_MCLRE$OFF 0000           __initialization 07F8  
            __end_of_main 07F8                    ??_main 0074                    _ADRESH 001E  
                  ?_setup 0070                    _ANSELH 0189                    _TRISC3 043B  
                  _TRISC5 043D                    _SSPCON 0014                    _SSPBUF 0013  
          __CFG_PWRTE$OFF 0000                    _valor2 0078          __end_of_spiWrite 0716  
               ??_spiInit 0073                 ??_spiRead 0070   __end_of__initialization 07FC  
          __pcstackCOMMON 0070             __end_of_setup 0769                   ??_setup 0074  
              __pmaintext 0769   __size_of_spiReceiveWait 0007                   _SSPSTAT 0094  
               ?_spiWrite 0070                 _ANSELbits 0188                   __ptext1 0710  
                 __ptext2 071D                   __ptext3 0716                   __ptext4 073C  
                 __ptext5 0726                   _spiInit 0726                   _spiRead 071D  
    end_of_initialization 07FC                ??_spiWrite 0070                 _TRISAbits 0085  
             spiWrite@dat 0070            _spiReceiveWait 0716       start_initialization 07F8  
__CFG_FOSC$INTRC_NOCLKOUT 0000    __end_of_spiReceiveWait 071D               __pbssCOMMON 0077  
               ___latbits 0002           ?_spiReceiveWait 0070         __size_of_spiWrite 0006  
                ?_spiInit 0070                  ?_spiRead 0070            __size_of_setup 002D  
    spiInit@sTransmitEdge 0072                  _PIE1bits 008C        spiInit@sDataSample 0070  
                _PIR1bits 000C                _ADCON0bits 001F                _ADCON1bits 009F  
        __size_of_spiInit 0016          __size_of_spiRead 0009         __CFG_BOR4V$BOR40V 0000  
           __size_of_main 008F                  _spiWrite 0710              spiInit@sType 0073  
       spiInit@sClockIdle 0071                _INTCONbits 000B          ??_spiReceiveWait 0070  
