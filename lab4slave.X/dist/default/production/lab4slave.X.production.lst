

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Wed Mar 18 08:28:11 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	intentry,global,class=CODE,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	dabs	1,0x7E,2
    17  0000                     
    18                           ; Version 2.10
    19                           ; Generated 31/07/2019 GMT
    20                           ; 
    21                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC16F887 Definitions
    50                           ; 
    51                           ; SFR Addresses
    52  0000                     	;# 
    53  0001                     	;# 
    54  0002                     	;# 
    55  0003                     	;# 
    56  0004                     	;# 
    57  0005                     	;# 
    58  0006                     	;# 
    59  0007                     	;# 
    60  0008                     	;# 
    61  0009                     	;# 
    62  000A                     	;# 
    63  000B                     	;# 
    64  000C                     	;# 
    65  000D                     	;# 
    66  000E                     	;# 
    67  000E                     	;# 
    68  000F                     	;# 
    69  0010                     	;# 
    70  0011                     	;# 
    71  0012                     	;# 
    72  0013                     	;# 
    73  0014                     	;# 
    74  0015                     	;# 
    75  0015                     	;# 
    76  0016                     	;# 
    77  0017                     	;# 
    78  0018                     	;# 
    79  0019                     	;# 
    80  001A                     	;# 
    81  001B                     	;# 
    82  001B                     	;# 
    83  001C                     	;# 
    84  001D                     	;# 
    85  001E                     	;# 
    86  001F                     	;# 
    87  0081                     	;# 
    88  0085                     	;# 
    89  0086                     	;# 
    90  0087                     	;# 
    91  0088                     	;# 
    92  0089                     	;# 
    93  008C                     	;# 
    94  008D                     	;# 
    95  008E                     	;# 
    96  008F                     	;# 
    97  0090                     	;# 
    98  0091                     	;# 
    99  0092                     	;# 
   100  0093                     	;# 
   101  0093                     	;# 
   102  0093                     	;# 
   103  0094                     	;# 
   104  0095                     	;# 
   105  0096                     	;# 
   106  0097                     	;# 
   107  0098                     	;# 
   108  0099                     	;# 
   109  009A                     	;# 
   110  009B                     	;# 
   111  009C                     	;# 
   112  009D                     	;# 
   113  009E                     	;# 
   114  009F                     	;# 
   115  0105                     	;# 
   116  0107                     	;# 
   117  0108                     	;# 
   118  0109                     	;# 
   119  010C                     	;# 
   120  010C                     	;# 
   121  010D                     	;# 
   122  010E                     	;# 
   123  010F                     	;# 
   124  0185                     	;# 
   125  0187                     	;# 
   126  0188                     	;# 
   127  0189                     	;# 
   128  018C                     	;# 
   129  018D                     	;# 
   130  0000                     	;# 
   131  0001                     	;# 
   132  0002                     	;# 
   133  0003                     	;# 
   134  0004                     	;# 
   135  0005                     	;# 
   136  0006                     	;# 
   137  0007                     	;# 
   138  0008                     	;# 
   139  0009                     	;# 
   140  000A                     	;# 
   141  000B                     	;# 
   142  000C                     	;# 
   143  000D                     	;# 
   144  000E                     	;# 
   145  000E                     	;# 
   146  000F                     	;# 
   147  0010                     	;# 
   148  0011                     	;# 
   149  0012                     	;# 
   150  0013                     	;# 
   151  0014                     	;# 
   152  0015                     	;# 
   153  0015                     	;# 
   154  0016                     	;# 
   155  0017                     	;# 
   156  0018                     	;# 
   157  0019                     	;# 
   158  001A                     	;# 
   159  001B                     	;# 
   160  001B                     	;# 
   161  001C                     	;# 
   162  001D                     	;# 
   163  001E                     	;# 
   164  001F                     	;# 
   165  0081                     	;# 
   166  0085                     	;# 
   167  0086                     	;# 
   168  0087                     	;# 
   169  0088                     	;# 
   170  0089                     	;# 
   171  008C                     	;# 
   172  008D                     	;# 
   173  008E                     	;# 
   174  008F                     	;# 
   175  0090                     	;# 
   176  0091                     	;# 
   177  0092                     	;# 
   178  0093                     	;# 
   179  0093                     	;# 
   180  0093                     	;# 
   181  0094                     	;# 
   182  0095                     	;# 
   183  0096                     	;# 
   184  0097                     	;# 
   185  0098                     	;# 
   186  0099                     	;# 
   187  009A                     	;# 
   188  009B                     	;# 
   189  009C                     	;# 
   190  009D                     	;# 
   191  009E                     	;# 
   192  009F                     	;# 
   193  0105                     	;# 
   194  0107                     	;# 
   195  0108                     	;# 
   196  0109                     	;# 
   197  010C                     	;# 
   198  010C                     	;# 
   199  010D                     	;# 
   200  010E                     	;# 
   201  010F                     	;# 
   202  0185                     	;# 
   203  0187                     	;# 
   204  0188                     	;# 
   205  0189                     	;# 
   206  018C                     	;# 
   207  018D                     	;# 
   208  0000                     	;# 
   209  0001                     	;# 
   210  0002                     	;# 
   211  0003                     	;# 
   212  0004                     	;# 
   213  0005                     	;# 
   214  0006                     	;# 
   215  0007                     	;# 
   216  0008                     	;# 
   217  0009                     	;# 
   218  000A                     	;# 
   219  000B                     	;# 
   220  000C                     	;# 
   221  000D                     	;# 
   222  000E                     	;# 
   223  000E                     	;# 
   224  000F                     	;# 
   225  0010                     	;# 
   226  0011                     	;# 
   227  0012                     	;# 
   228  0013                     	;# 
   229  0014                     	;# 
   230  0015                     	;# 
   231  0015                     	;# 
   232  0016                     	;# 
   233  0017                     	;# 
   234  0018                     	;# 
   235  0019                     	;# 
   236  001A                     	;# 
   237  001B                     	;# 
   238  001B                     	;# 
   239  001C                     	;# 
   240  001D                     	;# 
   241  001E                     	;# 
   242  001F                     	;# 
   243  0081                     	;# 
   244  0085                     	;# 
   245  0086                     	;# 
   246  0087                     	;# 
   247  0088                     	;# 
   248  0089                     	;# 
   249  008C                     	;# 
   250  008D                     	;# 
   251  008E                     	;# 
   252  008F                     	;# 
   253  0090                     	;# 
   254  0091                     	;# 
   255  0092                     	;# 
   256  0093                     	;# 
   257  0093                     	;# 
   258  0093                     	;# 
   259  0094                     	;# 
   260  0095                     	;# 
   261  0096                     	;# 
   262  0097                     	;# 
   263  0098                     	;# 
   264  0099                     	;# 
   265  009A                     	;# 
   266  009B                     	;# 
   267  009C                     	;# 
   268  009D                     	;# 
   269  009E                     	;# 
   270  009F                     	;# 
   271  0105                     	;# 
   272  0107                     	;# 
   273  0108                     	;# 
   274  0109                     	;# 
   275  010C                     	;# 
   276  010C                     	;# 
   277  010D                     	;# 
   278  010E                     	;# 
   279  010F                     	;# 
   280  0185                     	;# 
   281  0187                     	;# 
   282  0188                     	;# 
   283  0189                     	;# 
   284  018C                     	;# 
   285  018D                     	;# 
   286  0013                     _SSPBUF	set	19
   287  0014                     _SSPCON	set	20
   288  000B                     _INTCONbits	set	11
   289  0009                     _PORTE	set	9
   290  0006                     _PORTB	set	6
   291  001A                     _RCREG	set	26
   292  000C                     _PIR1bits	set	12
   293  0008                     _PORTD	set	8
   294  0063                     _SSPIF	set	99
   295  0094                     _SSPSTATbits	set	148
   296  0094                     _SSPSTAT	set	148
   297  0085                     _TRISAbits	set	133
   298  008C                     _PIE1bits	set	140
   299  0089                     _TRISE	set	137
   300  0088                     _TRISD	set	136
   301  0086                     _TRISB	set	134
   302  043B                     _TRISC3	set	1083
   303  043D                     _TRISC5	set	1085
   304  0188                     _ANSELbits	set	392
   305  0189                     _ANSELH	set	393
   306  0188                     _ANSEL	set	392
   307                           
   308                           ; #config settings
   309  0000                     
   310                           	psect	cinit
   311  000F                     start_initialization:	
   312  000F                     __initialization:	
   313                           
   314                           ; Clear objects allocated to COMMON
   315  000F  01F0               	clrf	__pbssCOMMON& (0+127)
   316  0010  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   317  0011  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   318  0012  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   319  0013  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
   320  0014  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
   321  0015  01F6               	clrf	(__pbssCOMMON+6)& (0+127)
   322  0016                     end_of_initialization:	
   323                           ;End of C runtime variable initialization code
   324                           
   325  0016                     __end_of__initialization:	
   326  0016  0183               	clrf	3
   327  0017  120A  118A  288B   	ljmp	_main	;jump to C main() function
   328                           
   329                           	psect	bssCOMMON
   330  0070                     __pbssCOMMON:	
   331  0070                     _valor5:	
   332  0070                     	ds	1
   333  0071                     _valor4:	
   334  0071                     	ds	1
   335  0072                     _valor3:	
   336  0072                     	ds	1
   337  0073                     _valor2:	
   338  0073                     	ds	1
   339  0074                     _valor1:	
   340  0074                     	ds	1
   341  0075                     _coso2:	
   342  0075                     	ds	1
   343  0076                     _coso:	
   344  0076                     	ds	1
   345                           
   346                           	psect	cstackCOMMON
   347  0077                     __pcstackCOMMON:	
   348  0077                     ?_spiRead:	
   349  0077                     ??_spiRead:	
   350                           ; 1 bytes @ 0x0
   351                           
   352  0077                     ?_spiWrite:	
   353                           ; 1 bytes @ 0x0
   354                           
   355  0077                     ??_spiWrite:	
   356                           ; 1 bytes @ 0x0
   357                           
   358  0077                     ?_setup:	
   359                           ; 1 bytes @ 0x0
   360                           
   361  0077                     ?_isr:	
   362                           ; 1 bytes @ 0x0
   363                           
   364  0077                     ?_main:	
   365                           ; 1 bytes @ 0x0
   366                           
   367  0077                     ?_spiReceiveWait:	
   368                           ; 1 bytes @ 0x0
   369                           
   370  0077                     ??_spiReceiveWait:	
   371                           ; 1 bytes @ 0x0
   372                           
   373  0077                     spiWrite@dat:	
   374                           ; 1 bytes @ 0x0
   375                           
   376                           
   377                           ; 1 bytes @ 0x0
   378  0077                     	ds	1
   379  0078                     ??_isr:	
   380                           
   381                           ; 1 bytes @ 0x1
   382  0078                     	ds	2
   383  007A                     ??_spiInit:	
   384  007A                     spiInit@sType:	
   385                           ; 1 bytes @ 0x3
   386                           
   387                           
   388                           ; 1 bytes @ 0x3
   389  007A                     	ds	1
   390  007B                     ??_setup:	
   391  007B                     ??_main:	
   392                           ; 1 bytes @ 0x4
   393                           
   394                           
   395                           	psect	cstackBANK0
   396  0020                     __pcstackBANK0:	
   397                           ; 1 bytes @ 0x4
   398                           
   399  0020                     ?_spiInit:	
   400  0020                     spiInit@sDataSample:	
   401                           ; 1 bytes @ 0x0
   402                           
   403                           
   404                           ; 1 bytes @ 0x0
   405  0020                     	ds	1
   406  0021                     spiInit@sClockIdle:	
   407                           
   408                           ; 1 bytes @ 0x1
   409  0021                     	ds	1
   410  0022                     spiInit@sTransmitEdge:	
   411                           
   412                           ; 1 bytes @ 0x2
   413  0022                     	ds	1
   414                           
   415                           	psect	maintext
   416  008B                     __pmaintext:	
   417 ;;
   418 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   419 ;;
   420 ;; *************** function _main *****************
   421 ;; Defined at:
   422 ;;		line 107 in file "slave4.c"
   423 ;; Parameters:    Size  Location     Type
   424 ;;		None
   425 ;; Auto vars:     Size  Location     Type
   426 ;;		None
   427 ;; Return value:  Size  Location     Type
   428 ;;                  1    wreg      void 
   429 ;; Registers used:
   430 ;;		wreg, status,2, status,0, pclath, cstack
   431 ;; Tracked objects:
   432 ;;		On entry : B00/0
   433 ;;		On exit  : 0/0
   434 ;;		Unchanged: 0/0
   435 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   436 ;;      Params:         0       0       0       0       0
   437 ;;      Locals:         0       0       0       0       0
   438 ;;      Temps:          0       0       0       0       0
   439 ;;      Totals:         0       0       0       0       0
   440 ;;Total ram usage:        0 bytes
   441 ;; Hardware stack levels required when called:    5
   442 ;; This function calls:
   443 ;;		_setup
   444 ;; This function is called by:
   445 ;;		Startup code after reset
   446 ;; This function uses a non-reentrant model
   447 ;;
   448                           
   449                           
   450                           ;psect for function _main
   451  008B                     _main:	
   452  008B                     l892:	
   453                           ;incstack = 0
   454                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   455                           
   456                           
   457                           ;slave4.c: 108:     setup();
   458  008B  120A  118A  201A  120A  118A  	fcall	_setup
   459  0090                     l72:	
   460                           ;slave4.c: 114:     while(1){
   461                           
   462  0090                     l73:	
   463                           ;slave4.c: 119:     }}
   464                           
   465  0090  2890               	goto	l72
   466  0091  120A  118A  280C   	ljmp	start
   467  0094                     __end_of_main:	
   468                           
   469                           	psect	text1
   470  001A                     __ptext1:	
   471 ;; *************** function _setup *****************
   472 ;; Defined at:
   473 ;;		line 123 in file "slave4.c"
   474 ;; Parameters:    Size  Location     Type
   475 ;;		None
   476 ;; Auto vars:     Size  Location     Type
   477 ;;		None
   478 ;; Return value:  Size  Location     Type
   479 ;;                  1    wreg      void 
   480 ;; Registers used:
   481 ;;		wreg, status,2, status,0, pclath, cstack
   482 ;; Tracked objects:
   483 ;;		On entry : 0/0
   484 ;;		On exit  : 0/0
   485 ;;		Unchanged: 0/0
   486 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   487 ;;      Params:         0       0       0       0       0
   488 ;;      Locals:         0       0       0       0       0
   489 ;;      Temps:          0       0       0       0       0
   490 ;;      Totals:         0       0       0       0       0
   491 ;;Total ram usage:        0 bytes
   492 ;; Hardware stack levels used:    1
   493 ;; Hardware stack levels required when called:    4
   494 ;; This function calls:
   495 ;;		_spiInit
   496 ;; This function is called by:
   497 ;;		_main
   498 ;; This function uses a non-reentrant model
   499 ;;
   500                           
   501                           
   502                           ;psect for function _setup
   503  001A                     _setup:	
   504  001A                     l862:	
   505                           ;incstack = 0
   506                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
   507                           
   508                           
   509                           ;slave4.c: 124:     ANSEL = 0;
   510  001A  1683               	bsf	3,5	;RP0=1, select bank3
   511  001B  1703               	bsf	3,6	;RP1=1, select bank3
   512  001C  0188               	clrf	8	;volatile
   513  001D                     l864:	
   514                           
   515                           ;slave4.c: 125:     ANSELH=1;
   516  001D  3001               	movlw	1
   517  001E  0089               	movwf	9	;volatile
   518  001F                     l866:	
   519                           
   520                           ;slave4.c: 127:     TRISB = 1;
   521  001F  3001               	movlw	1
   522  0020  1683               	bsf	3,5	;RP0=1, select bank1
   523  0021  1303               	bcf	3,6	;RP1=0, select bank1
   524  0022  0086               	movwf	6	;volatile
   525                           
   526                           ;slave4.c: 128:     TRISD = 0;
   527  0023  0188               	clrf	8	;volatile
   528                           
   529                           ;slave4.c: 130:     PORTB = 0;
   530  0024  1283               	bcf	3,5	;RP0=0, select bank0
   531  0025  1303               	bcf	3,6	;RP1=0, select bank0
   532  0026  0186               	clrf	6	;volatile
   533                           
   534                           ;slave4.c: 131:     PORTD = 0;
   535  0027  0188               	clrf	8	;volatile
   536                           
   537                           ;slave4.c: 132:     PORTE=0;
   538  0028  0189               	clrf	9	;volatile
   539                           
   540                           ;slave4.c: 133:     TRISE=0;
   541  0029  1683               	bsf	3,5	;RP0=1, select bank1
   542  002A  1303               	bcf	3,6	;RP1=0, select bank1
   543  002B  0189               	clrf	9	;volatile
   544  002C                     l868:	
   545                           
   546                           ;slave4.c: 134:     INTCONbits.GIE = 1;
   547  002C  178B               	bsf	11,7	;volatile
   548  002D                     l870:	
   549                           
   550                           ;slave4.c: 135:     INTCONbits.PEIE = 1;
   551  002D  170B               	bsf	11,6	;volatile
   552  002E                     l872:	
   553                           
   554                           ;slave4.c: 136:     PIR1bits.SSPIF = 0;
   555  002E  1283               	bcf	3,5	;RP0=0, select bank0
   556  002F  1303               	bcf	3,6	;RP1=0, select bank0
   557  0030  118C               	bcf	12,3	;volatile
   558  0031                     l874:	
   559                           
   560                           ;slave4.c: 137:     PIE1bits.SSPIE = 1;
   561  0031  1683               	bsf	3,5	;RP0=1, select bank1
   562  0032  1303               	bcf	3,6	;RP1=0, select bank1
   563  0033  158C               	bsf	12,3	;volatile
   564  0034                     l876:	
   565                           
   566                           ;slave4.c: 139:     TRISAbits.TRISA5 = 1;
   567  0034  1685               	bsf	5,5	;volatile
   568  0035                     l878:	
   569                           
   570                           ;slave4.c: 140:     TRISAbits.TRISA0 = 1;
   571  0035  1405               	bsf	5,0	;volatile
   572  0036                     l880:	
   573                           
   574                           ;slave4.c: 141:     TRISAbits.TRISA1 = 1;
   575  0036  1485               	bsf	5,1	;volatile
   576  0037                     l882:	
   577                           
   578                           ;slave4.c: 142:     TRISAbits.TRISA2 = 1;
   579  0037  1505               	bsf	5,2	;volatile
   580  0038                     l884:	
   581                           
   582                           ;slave4.c: 143:     ANSELbits.ANS0=1;
   583  0038  1683               	bsf	3,5	;RP0=1, select bank3
   584  0039  1703               	bsf	3,6	;RP1=1, select bank3
   585  003A  1408               	bsf	8,0	;volatile
   586  003B                     l886:	
   587                           
   588                           ;slave4.c: 144:     ANSELbits.ANS1=1;
   589  003B  1488               	bsf	8,1	;volatile
   590  003C                     l888:	
   591                           
   592                           ;slave4.c: 145:     ANSELbits.ANS2=1;
   593  003C  1508               	bsf	8,2	;volatile
   594  003D                     l890:	
   595                           
   596                           ;slave4.c: 146:     spiInit(SPI_SLAVE_SS_DIS, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_LOW
      +                          , SPI_IDLE_2_ACTIVE);
   597  003D  1283               	bcf	3,5	;RP0=0, select bank0
   598  003E  1303               	bcf	3,6	;RP1=0, select bank0
   599  003F  01A0               	clrf	spiInit@sDataSample
   600  0040  01A1               	clrf	spiInit@sClockIdle
   601  0041  01A2               	clrf	spiInit@sTransmitEdge
   602  0042  3025               	movlw	37
   603  0043  120A  118A  206D  120A  118A  	fcall	_spiInit
   604  0048                     l78:	
   605  0048  0008               	return
   606  0049                     __end_of_setup:	
   607                           
   608                           	psect	text2
   609  006D                     __ptext2:	
   610 ;; *************** function _spiInit *****************
   611 ;; Defined at:
   612 ;;		line 13 in file "SPI.c"
   613 ;; Parameters:    Size  Location     Type
   614 ;;  sType           1    wreg     enum E1264
   615 ;;  sDataSample     1    0[BANK0 ] enum E1272
   616 ;;  sClockIdle      1    1[BANK0 ] enum E1276
   617 ;;  sTransmitEdg    1    2[BANK0 ] enum E1280
   618 ;; Auto vars:     Size  Location     Type
   619 ;;  sType           1    3[COMMON] enum E1264
   620 ;; Return value:  Size  Location     Type
   621 ;;                  1    wreg      void 
   622 ;; Registers used:
   623 ;;		wreg, status,2, status,0
   624 ;; Tracked objects:
   625 ;;		On entry : 0/0
   626 ;;		On exit  : 0/0
   627 ;;		Unchanged: 0/0
   628 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   629 ;;      Params:         0       3       0       0       0
   630 ;;      Locals:         1       0       0       0       0
   631 ;;      Temps:          0       0       0       0       0
   632 ;;      Totals:         1       3       0       0       0
   633 ;;Total ram usage:        4 bytes
   634 ;; Hardware stack levels used:    1
   635 ;; Hardware stack levels required when called:    3
   636 ;; This function calls:
   637 ;;		Nothing
   638 ;; This function is called by:
   639 ;;		_setup
   640 ;; This function uses a non-reentrant model
   641 ;;
   642                           
   643                           
   644                           ;psect for function _spiInit
   645  006D                     _spiInit:	
   646                           
   647                           ;incstack = 0
   648                           ; Regs used in _spiInit: [wreg+status,2+status,0]
   649                           ;spiInit@sType stored from wreg
   650  006D  00FA               	movwf	spiInit@sType
   651  006E                     l852:	
   652                           
   653                           ;SPI.c: 13: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 14: {;SPI.c: 15:     TRISC5 = 0;
   654  006E  1683               	bsf	3,5	;RP0=1, select bank1
   655  006F  1303               	bcf	3,6	;RP1=0, select bank1
   656  0070  1287               	bcf	7,5	;volatile
   657                           
   658                           ;SPI.c: 16:     if(sType & 0b00000100)
   659  0071  1D7A               	btfss	spiInit@sType,2
   660  0072  2874               	goto	u111
   661  0073  2875               	goto	u110
   662  0074                     u111:	
   663  0074  287D               	goto	l858
   664  0075                     u110:	
   665  0075                     l854:	
   666                           
   667                           ;SPI.c: 17:     {;SPI.c: 18:         SSPSTAT = sTransmitEdge;
   668  0075  1283               	bcf	3,5	;RP0=0, select bank0
   669  0076  1303               	bcf	3,6	;RP1=0, select bank0
   670  0077  0822               	movf	spiInit@sTransmitEdge,w
   671  0078  1683               	bsf	3,5	;RP0=1, select bank1
   672  0079  1303               	bcf	3,6	;RP1=0, select bank1
   673  007A  0094               	movwf	20	;volatile
   674  007B                     l856:	
   675                           
   676                           ;SPI.c: 19:         TRISC3 = 1;
   677  007B  1587               	bsf	7,3	;volatile
   678                           
   679                           ;SPI.c: 20:     }
   680  007C  2885               	goto	l94
   681  007D                     l858:	
   682                           
   683                           ;SPI.c: 22:     {;SPI.c: 23:         SSPSTAT = sDataSample | sTransmitEdge;
   684  007D  1283               	bcf	3,5	;RP0=0, select bank0
   685  007E  1303               	bcf	3,6	;RP1=0, select bank0
   686  007F  0820               	movf	spiInit@sDataSample,w
   687  0080  0422               	iorwf	spiInit@sTransmitEdge,w
   688  0081  1683               	bsf	3,5	;RP0=1, select bank1
   689  0082  1303               	bcf	3,6	;RP1=0, select bank1
   690  0083  0094               	movwf	20	;volatile
   691  0084                     l860:	
   692                           
   693                           ;SPI.c: 24:         TRISC3 = 0;
   694  0084  1187               	bcf	7,3	;volatile
   695  0085                     l94:	
   696                           ;SPI.c: 25:     }
   697                           
   698                           
   699                           ;SPI.c: 27:     SSPCON = sType | sClockIdle;
   700  0085  087A               	movf	spiInit@sType,w
   701  0086  1283               	bcf	3,5	;RP0=0, select bank0
   702  0087  1303               	bcf	3,6	;RP1=0, select bank0
   703  0088  0421               	iorwf	spiInit@sClockIdle,w
   704  0089  0094               	movwf	20	;volatile
   705  008A                     l95:	
   706  008A  0008               	return
   707  008B                     __end_of_spiInit:	
   708                           
   709                           	psect	text3
   710  0049                     __ptext3:	
   711 ;; *************** function _isr *****************
   712 ;; Defined at:
   713 ;;		line 64 in file "slave4.c"
   714 ;; Parameters:    Size  Location     Type
   715 ;;		None
   716 ;; Auto vars:     Size  Location     Type
   717 ;;		None
   718 ;; Return value:  Size  Location     Type
   719 ;;                  1    wreg      void 
   720 ;; Registers used:
   721 ;;		wreg, status,2, status,0, pclath, cstack
   722 ;; Tracked objects:
   723 ;;		On entry : 0/0
   724 ;;		On exit  : 0/0
   725 ;;		Unchanged: 0/0
   726 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   727 ;;      Params:         0       0       0       0       0
   728 ;;      Locals:         0       0       0       0       0
   729 ;;      Temps:          2       0       0       0       0
   730 ;;      Totals:         2       0       0       0       0
   731 ;;Total ram usage:        2 bytes
   732 ;; Hardware stack levels used:    1
   733 ;; Hardware stack levels required when called:    2
   734 ;; This function calls:
   735 ;;		_spiRead
   736 ;;		_spiWrite
   737 ;; This function is called by:
   738 ;;		Interrupt level 1
   739 ;; This function uses a non-reentrant model
   740 ;;
   741                           
   742                           
   743                           ;psect for function _isr
   744  0049                     _isr:	
   745  0049                     i1l754:	
   746                           
   747                           ;slave4.c: 65:    if(SSPIF == 1){
   748  0049  1283               	bcf	3,5	;RP0=0, select bank0
   749  004A  1303               	bcf	3,6	;RP1=0, select bank0
   750  004B  1D8C               	btfss	12,3	;volatile
   751  004C  284E               	goto	u3_21
   752  004D  284F               	goto	u3_20
   753  004E                     u3_21:	
   754  004E  2866               	goto	i1l59
   755  004F                     u3_20:	
   756  004F                     i1l756:	
   757                           
   758                           ;slave4.c: 67:      PORTD = spiRead();
   759  004F  120A  118A  2094  120A  118A  	fcall	_spiRead
   760  0054  1283               	bcf	3,5	;RP0=0, select bank0
   761  0055  1303               	bcf	3,6	;RP1=0, select bank0
   762  0056  0088               	movwf	8	;volatile
   763  0057                     i1l758:	
   764                           
   765                           ;slave4.c: 68:      if (PORTD==2){
   766  0057  3002               	movlw	2
   767  0058  0608               	xorwf	8,w	;volatile
   768  0059  1D03               	btfss	3,2
   769  005A  285C               	goto	u4_21
   770  005B  285D               	goto	u4_20
   771  005C                     u4_21:	
   772  005C  2866               	goto	i1l59
   773  005D                     u4_20:	
   774  005D                     i1l760:	
   775                           
   776                           ;slave4.c: 69:         spiWrite(4);
   777  005D  3004               	movlw	4
   778  005E  120A  118A  20A4  120A  118A  	fcall	_spiWrite
   779  0063                     i1l762:	
   780                           
   781                           ;slave4.c: 71:         SSPIF = 0;
   782  0063  1283               	bcf	3,5	;RP0=0, select bank0
   783  0064  1303               	bcf	3,6	;RP1=0, select bank0
   784  0065  118C               	bcf	12,3	;volatile
   785  0066                     i1l59:	
   786  0066  0879               	movf	??_isr+1,w
   787  0067  008A               	movwf	10
   788  0068  0E78               	swapf	??_isr^(0+4294967168),w
   789  0069  0083               	movwf	3
   790  006A  0EFE               	swapf	btemp,f
   791  006B  0E7E               	swapf	btemp,w
   792  006C  0009               	retfie
   793  006D                     __end_of_isr:	
   794                           
   795                           	psect	intentry
   796  0004                     __pintentry:	
   797                           ;incstack = 0
   798                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
   799                           
   800  0004                     interrupt_function:	
   801  007E                     saved_w	set	btemp
   802  0004  00FE               	movwf	btemp
   803  0005  0E03               	swapf	3,w
   804  0006  00F8               	movwf	??_isr
   805  0007  080A               	movf	10,w
   806  0008  00F9               	movwf	??_isr+1
   807  0009  120A  118A  2849   	ljmp	_isr
   808                           
   809                           	psect	text4
   810  00A4                     __ptext4:	
   811 ;; *************** function _spiWrite *****************
   812 ;; Defined at:
   813 ;;		line 35 in file "SPI.c"
   814 ;; Parameters:    Size  Location     Type
   815 ;;  dat             1    wreg     unsigned char 
   816 ;; Auto vars:     Size  Location     Type
   817 ;;  dat             1    0[COMMON] unsigned char 
   818 ;; Return value:  Size  Location     Type
   819 ;;                  1    wreg      void 
   820 ;; Registers used:
   821 ;;		wreg
   822 ;; Tracked objects:
   823 ;;		On entry : 0/0
   824 ;;		On exit  : 0/0
   825 ;;		Unchanged: 0/0
   826 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   827 ;;      Params:         0       0       0       0       0
   828 ;;      Locals:         1       0       0       0       0
   829 ;;      Temps:          0       0       0       0       0
   830 ;;      Totals:         1       0       0       0       0
   831 ;;Total ram usage:        1 bytes
   832 ;; Hardware stack levels used:    1
   833 ;; This function calls:
   834 ;;		Nothing
   835 ;; This function is called by:
   836 ;;		_isr
   837 ;; This function uses a non-reentrant model
   838 ;;
   839                           
   840                           
   841                           ;psect for function _spiWrite
   842  00A4                     _spiWrite:	
   843                           
   844                           ;incstack = 0
   845                           ; Regs used in _spiWrite: [wreg]
   846                           ;spiWrite@dat stored from wreg
   847  00A4  00F7               	movwf	spiWrite@dat
   848  00A5                     i1l722:	
   849                           
   850                           ;SPI.c: 35: void spiWrite(char dat);SPI.c: 36: {;SPI.c: 37:     SSPBUF = dat;
   851  00A5  0877               	movf	spiWrite@dat,w
   852  00A6  1283               	bcf	3,5	;RP0=0, select bank0
   853  00A7  1303               	bcf	3,6	;RP1=0, select bank0
   854  00A8  0093               	movwf	19	;volatile
   855  00A9                     i1l104:	
   856  00A9  0008               	return
   857  00AA                     __end_of_spiWrite:	
   858                           
   859                           	psect	text5
   860  0094                     __ptext5:	
   861 ;; *************** function _spiRead *****************
   862 ;; Defined at:
   863 ;;		line 48 in file "SPI.c"
   864 ;; Parameters:    Size  Location     Type
   865 ;;		None
   866 ;; Auto vars:     Size  Location     Type
   867 ;;		None
   868 ;; Return value:  Size  Location     Type
   869 ;;                  1    wreg      unsigned char 
   870 ;; Registers used:
   871 ;;		wreg, status,2, status,0, pclath, cstack
   872 ;; Tracked objects:
   873 ;;		On entry : 0/0
   874 ;;		On exit  : 0/0
   875 ;;		Unchanged: 0/0
   876 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   877 ;;      Params:         0       0       0       0       0
   878 ;;      Locals:         0       0       0       0       0
   879 ;;      Temps:          0       0       0       0       0
   880 ;;      Totals:         0       0       0       0       0
   881 ;;Total ram usage:        0 bytes
   882 ;; Hardware stack levels used:    1
   883 ;; Hardware stack levels required when called:    1
   884 ;; This function calls:
   885 ;;		_spiReceiveWait
   886 ;; This function is called by:
   887 ;;		_isr
   888 ;; This function uses a non-reentrant model
   889 ;;
   890                           
   891                           
   892                           ;psect for function _spiRead
   893  0094                     _spiRead:	
   894  0094                     i1l716:	
   895                           ;incstack = 0
   896                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
   897                           
   898                           
   899                           ;SPI.c: 50:     spiReceiveWait();
   900  0094  120A  118A  209D  120A  118A  	fcall	_spiReceiveWait
   901  0099                     i1l718:	
   902                           
   903                           ;SPI.c: 51:     return(SSPBUF);
   904  0099  1283               	bcf	3,5	;RP0=0, select bank0
   905  009A  1303               	bcf	3,6	;RP1=0, select bank0
   906  009B  0813               	movf	19,w	;volatile
   907  009C                     i1l112:	
   908  009C  0008               	return
   909  009D                     __end_of_spiRead:	
   910                           
   911                           	psect	text6
   912  009D                     __ptext6:	
   913 ;; *************** function _spiReceiveWait *****************
   914 ;; Defined at:
   915 ;;		line 30 in file "SPI.c"
   916 ;; Parameters:    Size  Location     Type
   917 ;;		None
   918 ;; Auto vars:     Size  Location     Type
   919 ;;		None
   920 ;; Return value:  Size  Location     Type
   921 ;;                  1    wreg      void 
   922 ;; Registers used:
   923 ;;		None
   924 ;; Tracked objects:
   925 ;;		On entry : 0/0
   926 ;;		On exit  : 0/0
   927 ;;		Unchanged: 0/0
   928 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   929 ;;      Params:         0       0       0       0       0
   930 ;;      Locals:         0       0       0       0       0
   931 ;;      Temps:          0       0       0       0       0
   932 ;;      Totals:         0       0       0       0       0
   933 ;;Total ram usage:        0 bytes
   934 ;; Hardware stack levels used:    1
   935 ;; This function calls:
   936 ;;		Nothing
   937 ;; This function is called by:
   938 ;;		_spiRead
   939 ;; This function uses a non-reentrant model
   940 ;;
   941                           
   942                           
   943                           ;psect for function _spiReceiveWait
   944  009D                     _spiReceiveWait:	
   945  009D                     i1l714:	
   946                           ;incstack = 0
   947                           ; Regs used in _spiReceiveWait: []
   948                           
   949  009D                     i1l98:	
   950                           ;SPI.c: 32:     while ( !SSPSTATbits.BF );
   951                           
   952  009D  1683               	bsf	3,5	;RP0=1, select bank1
   953  009E  1303               	bcf	3,6	;RP1=0, select bank1
   954  009F  1C14               	btfss	20,0	;volatile
   955  00A0  28A2               	goto	u2_21
   956  00A1  28A3               	goto	u2_20
   957  00A2                     u2_21:	
   958  00A2  289D               	goto	i1l98
   959  00A3                     u2_20:	
   960  00A3                     i1l101:	
   961  00A3  0008               	return
   962  00A4                     __end_of_spiReceiveWait:	
   963  007E                     btemp	set	126	;btemp
   964  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         7
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      4      11
    BANK0            80      3       3
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _setup->_spiInit

Critical Paths under _isr in COMMON

    _isr->_spiWrite

Critical Paths under _main in BANK0

    _setup->_spiInit

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     456
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     456
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     456
                                              3 COMMON     1     1      0
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  2     2      0      15
                                              1 COMMON     2     2      0
                            _spiRead
                           _spiWrite
 ---------------------------------------------------------------------------------
 (4) _spiWrite                                             1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (5) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _setup
     _spiInit

 _isr (ROOT)
   _spiRead
     _spiReceiveWait
   _spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      4       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       E       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      3       3       5        3.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       E      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Wed Mar 18 08:28:11 2020

             __CFG_CP$OFF 0000               _SSPSTATbits 0094                        l72 0090  
                      l73 0090                        l94 0085                        l78 0048  
                      l95 008A                       l860 0084                       l852 006E  
                     l854 0075                       l870 002D                       l862 001A  
                     l856 007B                       l880 0036                       l872 002E  
                     l864 001D                       l858 007D                       l890 003D  
                     l882 0037                       l874 0031                       l866 001F  
                     l884 0038                       l876 0034                       l868 002C  
                     l892 008B                       l886 003B                       l878 0035  
                     l888 003C                       u110 0075                       u111 0074  
            __CFG_CPD$OFF 0000                       _isr 0049              __CFG_LVP$OFF 0000  
                    ?_isr 0077                      i1l59 0066                      i1l98 009D  
                    u2_20 00A3                      u2_21 00A2                      u3_20 004F  
                    u3_21 004E                      u4_20 005D                      u4_21 005C  
            __CFG_WRT$OFF 0000                      _coso 0076                      _main 008B  
                    btemp 007E                      start 000C             __CFG_IESO$OFF 0000  
                   ??_isr 0078                     ?_main 0077             __CFG_WDTE$OFF 0000  
                   _ANSEL 0188                     i1l101 00A3                     i1l112 009C  
                   i1l104 00A9                     i1l714 009D                     i1l722 00A5  
                   i1l716 0094                     i1l718 0099                     i1l760 005D  
                   i1l762 0063                     i1l754 0049                     i1l756 004F  
                   i1l758 0057                     _RCREG 001A                     _PORTB 0006  
                   _PORTD 0008                     _PORTE 0009                     _TRISB 0086  
                   _TRISD 0088                     _TRISE 0089                     _SSPIF 0063  
          __CFG_FCMEN$OFF 0000                     _coso2 0075                     _setup 001A  
          __CFG_BOREN$OFF 0000                     pclath 000A           __end_of_spiInit 008B  
         __end_of_spiRead 009D                     status 0003                     wtemp0 007E  
          __CFG_MCLRE$OFF 0000           __initialization 000F              __end_of_main 0094  
                  ??_main 007B                    ?_setup 0077                    _ANSELH 0189  
                  _TRISC3 043B                    _TRISC5 043D                    _SSPCON 0014  
                  _SSPBUF 0013            __CFG_PWRTE$OFF 0000                    _valor1 0074  
                  _valor2 0073                    _valor3 0072                    _valor4 0071  
                  _valor5 0070                    saved_w 007E          __end_of_spiWrite 00AA  
               ??_spiInit 007A                 ??_spiRead 0077   __end_of__initialization 0016  
          __pcstackCOMMON 0077             __end_of_setup 0049                   ??_setup 007B  
              __pmaintext 008B                __pintentry 0004   __size_of_spiReceiveWait 0007  
                 _SSPSTAT 0094                 ?_spiWrite 0077                 _ANSELbits 0188  
                 __ptext1 001A                   __ptext2 006D                   __ptext3 0049  
                 __ptext4 00A4                   __ptext5 0094                   __ptext6 009D  
            __size_of_isr 0024                   _spiInit 006D                   _spiRead 0094  
    end_of_initialization 0016                ??_spiWrite 0077                 _TRISAbits 0085  
             spiWrite@dat 0077            _spiReceiveWait 009D       start_initialization 000F  
             __end_of_isr 006D  __CFG_FOSC$INTRC_NOCLKOUT 0000    __end_of_spiReceiveWait 00A4  
             __pbssCOMMON 0070                 ___latbits 0002             __pcstackBANK0 0020  
         ?_spiReceiveWait 0077         __size_of_spiWrite 0006                  ?_spiInit 0020  
                ?_spiRead 0077            __size_of_setup 002F      spiInit@sTransmitEdge 0022  
       interrupt_function 0004                  _PIE1bits 008C        spiInit@sDataSample 0020  
                _PIR1bits 000C          __size_of_spiInit 001E          __size_of_spiRead 0009  
       __CFG_BOR4V$BOR40V 0000             __size_of_main 0009                  _spiWrite 00A4  
            spiInit@sType 007A         spiInit@sClockIdle 0021                _INTCONbits 000B  
                intlevel1 0000          ??_spiReceiveWait 0077  
