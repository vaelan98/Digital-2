

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Mon May 11 18:18:03 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	intentry,global,class=CODE,delta=2
    17                           	dabs	1,0x7E,2
    18  0000                     
    19                           ; Version 2.10
    20                           ; Generated 31/07/2019 GMT
    21                           ; 
    22                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC16F887 Definitions
    51                           ; 
    52                           ; SFR Addresses
    53  0000                     	;# 
    54  0001                     	;# 
    55  0002                     	;# 
    56  0003                     	;# 
    57  0004                     	;# 
    58  0005                     	;# 
    59  0006                     	;# 
    60  0007                     	;# 
    61  0008                     	;# 
    62  0009                     	;# 
    63  000A                     	;# 
    64  000B                     	;# 
    65  000C                     	;# 
    66  000D                     	;# 
    67  000E                     	;# 
    68  000E                     	;# 
    69  000F                     	;# 
    70  0010                     	;# 
    71  0011                     	;# 
    72  0012                     	;# 
    73  0013                     	;# 
    74  0014                     	;# 
    75  0015                     	;# 
    76  0015                     	;# 
    77  0016                     	;# 
    78  0017                     	;# 
    79  0018                     	;# 
    80  0019                     	;# 
    81  001A                     	;# 
    82  001B                     	;# 
    83  001B                     	;# 
    84  001C                     	;# 
    85  001D                     	;# 
    86  001E                     	;# 
    87  001F                     	;# 
    88  0081                     	;# 
    89  0085                     	;# 
    90  0086                     	;# 
    91  0087                     	;# 
    92  0088                     	;# 
    93  0089                     	;# 
    94  008C                     	;# 
    95  008D                     	;# 
    96  008E                     	;# 
    97  008F                     	;# 
    98  0090                     	;# 
    99  0091                     	;# 
   100  0092                     	;# 
   101  0093                     	;# 
   102  0093                     	;# 
   103  0093                     	;# 
   104  0094                     	;# 
   105  0095                     	;# 
   106  0096                     	;# 
   107  0097                     	;# 
   108  0098                     	;# 
   109  0099                     	;# 
   110  009A                     	;# 
   111  009B                     	;# 
   112  009C                     	;# 
   113  009D                     	;# 
   114  009E                     	;# 
   115  009F                     	;# 
   116  0105                     	;# 
   117  0107                     	;# 
   118  0108                     	;# 
   119  0109                     	;# 
   120  010C                     	;# 
   121  010C                     	;# 
   122  010D                     	;# 
   123  010E                     	;# 
   124  010F                     	;# 
   125  0185                     	;# 
   126  0187                     	;# 
   127  0188                     	;# 
   128  0189                     	;# 
   129  018C                     	;# 
   130  018D                     	;# 
   131  0000                     	;# 
   132  0001                     	;# 
   133  0002                     	;# 
   134  0003                     	;# 
   135  0004                     	;# 
   136  0005                     	;# 
   137  0006                     	;# 
   138  0007                     	;# 
   139  0008                     	;# 
   140  0009                     	;# 
   141  000A                     	;# 
   142  000B                     	;# 
   143  000C                     	;# 
   144  000D                     	;# 
   145  000E                     	;# 
   146  000E                     	;# 
   147  000F                     	;# 
   148  0010                     	;# 
   149  0011                     	;# 
   150  0012                     	;# 
   151  0013                     	;# 
   152  0014                     	;# 
   153  0015                     	;# 
   154  0015                     	;# 
   155  0016                     	;# 
   156  0017                     	;# 
   157  0018                     	;# 
   158  0019                     	;# 
   159  001A                     	;# 
   160  001B                     	;# 
   161  001B                     	;# 
   162  001C                     	;# 
   163  001D                     	;# 
   164  001E                     	;# 
   165  001F                     	;# 
   166  0081                     	;# 
   167  0085                     	;# 
   168  0086                     	;# 
   169  0087                     	;# 
   170  0088                     	;# 
   171  0089                     	;# 
   172  008C                     	;# 
   173  008D                     	;# 
   174  008E                     	;# 
   175  008F                     	;# 
   176  0090                     	;# 
   177  0091                     	;# 
   178  0092                     	;# 
   179  0093                     	;# 
   180  0093                     	;# 
   181  0093                     	;# 
   182  0094                     	;# 
   183  0095                     	;# 
   184  0096                     	;# 
   185  0097                     	;# 
   186  0098                     	;# 
   187  0099                     	;# 
   188  009A                     	;# 
   189  009B                     	;# 
   190  009C                     	;# 
   191  009D                     	;# 
   192  009E                     	;# 
   193  009F                     	;# 
   194  0105                     	;# 
   195  0107                     	;# 
   196  0108                     	;# 
   197  0109                     	;# 
   198  010C                     	;# 
   199  010C                     	;# 
   200  010D                     	;# 
   201  010E                     	;# 
   202  010F                     	;# 
   203  0185                     	;# 
   204  0187                     	;# 
   205  0188                     	;# 
   206  0189                     	;# 
   207  018C                     	;# 
   208  018D                     	;# 
   209  0000                     	;# 
   210  0001                     	;# 
   211  0002                     	;# 
   212  0003                     	;# 
   213  0004                     	;# 
   214  0005                     	;# 
   215  0006                     	;# 
   216  0007                     	;# 
   217  0008                     	;# 
   218  0009                     	;# 
   219  000A                     	;# 
   220  000B                     	;# 
   221  000C                     	;# 
   222  000D                     	;# 
   223  000E                     	;# 
   224  000E                     	;# 
   225  000F                     	;# 
   226  0010                     	;# 
   227  0011                     	;# 
   228  0012                     	;# 
   229  0013                     	;# 
   230  0014                     	;# 
   231  0015                     	;# 
   232  0015                     	;# 
   233  0016                     	;# 
   234  0017                     	;# 
   235  0018                     	;# 
   236  0019                     	;# 
   237  001A                     	;# 
   238  001B                     	;# 
   239  001B                     	;# 
   240  001C                     	;# 
   241  001D                     	;# 
   242  001E                     	;# 
   243  001F                     	;# 
   244  0081                     	;# 
   245  0085                     	;# 
   246  0086                     	;# 
   247  0087                     	;# 
   248  0088                     	;# 
   249  0089                     	;# 
   250  008C                     	;# 
   251  008D                     	;# 
   252  008E                     	;# 
   253  008F                     	;# 
   254  0090                     	;# 
   255  0091                     	;# 
   256  0092                     	;# 
   257  0093                     	;# 
   258  0093                     	;# 
   259  0093                     	;# 
   260  0094                     	;# 
   261  0095                     	;# 
   262  0096                     	;# 
   263  0097                     	;# 
   264  0098                     	;# 
   265  0099                     	;# 
   266  009A                     	;# 
   267  009B                     	;# 
   268  009C                     	;# 
   269  009D                     	;# 
   270  009E                     	;# 
   271  009F                     	;# 
   272  0105                     	;# 
   273  0107                     	;# 
   274  0108                     	;# 
   275  0109                     	;# 
   276  010C                     	;# 
   277  010C                     	;# 
   278  010D                     	;# 
   279  010E                     	;# 
   280  010F                     	;# 
   281  0185                     	;# 
   282  0187                     	;# 
   283  0188                     	;# 
   284  0189                     	;# 
   285  018C                     	;# 
   286  018D                     	;# 
   287  0006                     _PORTBbits	set	6
   288  0006                     _PORTB	set	6
   289  001E                     _ADRESH	set	30
   290  0008                     _PORTD	set	8
   291  0014                     _SSPCONbits	set	20
   292  000C                     _PIR1bits	set	12
   293  0013                     _SSPBUF	set	19
   294  0014                     _SSPCON	set	20
   295  0063                     _SSPIF	set	99
   296  005E                     _PEIE	set	94
   297  005F                     _GIE	set	95
   298  0088                     _TRISD	set	136
   299  0086                     _TRISB	set	134
   300  0094                     _SSPSTATbits	set	148
   301  0091                     _SSPCON2bits	set	145
   302  0087                     _TRISCbits	set	135
   303  0094                     _SSPSTAT	set	148
   304  0093                     _SSPADD	set	147
   305  0091                     _SSPCON2	set	145
   306  04A0                     _BF	set	1184
   307  0463                     _SSPIE	set	1123
   308  0189                     _ANSELH	set	393
   309  0188                     _ANSEL	set	392
   310                           
   311                           ; #config settings
   312  0000                     
   313                           	psect	cinit
   314  000F                     start_initialization:	
   315  000F                     __initialization:	
   316                           
   317                           ; Clear objects allocated to COMMON
   318  000F  01F8               	clrf	__pbssCOMMON& (0+127)
   319  0010  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   320  0011  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
   321                           
   322                           ; Clear objects allocated to BANK0
   323  0012  1283               	bcf	3,5	;RP0=0, select bank0
   324  0013  1303               	bcf	3,6	;RP1=0, select bank0
   325  0014  01A4               	clrf	__pbssBANK0& (0+127)
   326  0015                     end_of_initialization:	
   327                           ;End of C runtime variable initialization code
   328                           
   329  0015                     __end_of__initialization:	
   330  0015  0183               	clrf	3
   331  0016  120A  118A  290C   	ljmp	_main	;jump to C main() function
   332                           
   333                           	psect	bssCOMMON
   334  0078                     __pbssCOMMON:	
   335  0078                     _coso2:	
   336  0078                     	ds	1
   337  0079                     _dato:	
   338  0079                     	ds	1
   339  007A                     _z:	
   340  007A                     	ds	1
   341                           
   342                           	psect	bssBANK0
   343  0024                     __pbssBANK0:	
   344  0024                     _a:	
   345  0024                     	ds	1
   346                           
   347                           	psect	cstackCOMMON
   348  0070                     __pcstackCOMMON:	
   349  0070                     ?_setup:	
   350  0070                     ?_system_init:	
   351                           ; 1 bytes @ 0x0
   352                           
   353  0070                     ?_full_drive:	
   354                           ; 1 bytes @ 0x0
   355                           
   356  0070                     ?_I2C_Slave_Init:	
   357                           ; 1 bytes @ 0x0
   358                           
   359  0070                     ?_isr:	
   360                           ; 1 bytes @ 0x0
   361                           
   362  0070                     ??_isr:	
   363                           ; 1 bytes @ 0x0
   364                           
   365  0070                     ?_main:	
   366                           ; 1 bytes @ 0x0
   367                           
   368                           
   369                           ; 1 bytes @ 0x0
   370  0070                     	ds	3
   371  0073                     ??_system_init:	
   372  0073                     ?_ms_delay:	
   373                           ; 1 bytes @ 0x3
   374                           
   375  0073                     ??_I2C_Slave_Init:	
   376                           ; 1 bytes @ 0x3
   377                           
   378  0073                     I2C_Slave_Init@address:	
   379                           ; 1 bytes @ 0x3
   380                           
   381  0073                     ms_delay@val:	
   382                           ; 1 bytes @ 0x3
   383                           
   384                           
   385                           ; 2 bytes @ 0x3
   386  0073                     	ds	1
   387  0074                     ??_setup:	
   388                           
   389                           ; 1 bytes @ 0x4
   390  0074                     	ds	1
   391  0075                     ??_full_drive:	
   392  0075                     ??_ms_delay:	
   393                           ; 1 bytes @ 0x5
   394                           
   395  0075                     full_drive@direction:	
   396                           ; 1 bytes @ 0x5
   397                           
   398                           
   399                           ; 1 bytes @ 0x5
   400  0075                     	ds	1
   401  0076                     ??_main:	
   402  0076                     main@i:	
   403                           ; 1 bytes @ 0x6
   404                           
   405                           
   406                           ; 2 bytes @ 0x6
   407  0076                     	ds	2
   408                           
   409                           	psect	cstackBANK0
   410  0020                     __pcstackBANK0:	
   411  0020                     ms_delay@i:	
   412                           
   413                           ; 2 bytes @ 0x0
   414  0020                     	ds	2
   415  0022                     ms_delay@j:	
   416                           
   417                           ; 2 bytes @ 0x2
   418  0022                     	ds	2
   419                           
   420                           	psect	maintext
   421  010C                     __pmaintext:	
   422 ;;
   423 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   424 ;;
   425 ;; *************** function _main *****************
   426 ;; Defined at:
   427 ;;		line 104 in file "slaveMOtorS2.c"
   428 ;; Parameters:    Size  Location     Type
   429 ;;		None
   430 ;; Auto vars:     Size  Location     Type
   431 ;;  i               2    6[COMMON] int 
   432 ;; Return value:  Size  Location     Type
   433 ;;                  1    wreg      void 
   434 ;; Registers used:
   435 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   436 ;; Tracked objects:
   437 ;;		On entry : B00/0
   438 ;;		On exit  : 0/0
   439 ;;		Unchanged: 0/0
   440 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   441 ;;      Params:         0       0       0       0       0
   442 ;;      Locals:         2       0       0       0       0
   443 ;;      Temps:          0       0       0       0       0
   444 ;;      Totals:         2       0       0       0       0
   445 ;;Total ram usage:        2 bytes
   446 ;; Hardware stack levels required when called:    3
   447 ;; This function calls:
   448 ;;		_full_drive
   449 ;;		_ms_delay
   450 ;;		_setup
   451 ;;		_system_init
   452 ;; This function is called by:
   453 ;;		Startup code after reset
   454 ;; This function uses a non-reentrant model
   455 ;;
   456                           
   457                           
   458                           ;psect for function _main
   459  010C                     _main:	
   460  010C                     l1255:	
   461                           ;incstack = 0
   462                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   463                           
   464                           
   465                           ;slaveMOtorS2.c: 106:  setup();
   466  010C  120A  118A  2189  120A  118A  	fcall	_setup
   467                           
   468                           ;slaveMOtorS2.c: 107: system_init();
   469  0111  120A  118A  219D  120A  118A  	fcall	_system_init
   470  0116                     l1257:	
   471                           
   472                           ;slaveMOtorS2.c: 110:     if(a==1){
   473  0116  1283               	bcf	3,5	;RP0=0, select bank0
   474  0117  1303               	bcf	3,6	;RP1=0, select bank0
   475  0118  0324               	decf	_a,w
   476  0119  1D03               	btfss	3,2
   477  011A  291C               	goto	u471
   478  011B  291D               	goto	u470
   479  011C                     u471:	
   480  011C  2941               	goto	l1273
   481  011D                     u470:	
   482  011D                     l1259:	
   483                           
   484                           ;slaveMOtorS2.c: 111: for(int i=0;i<250;i++)
   485  011D  01F6               	clrf	main@i
   486  011E  01F7               	clrf	main@i+1
   487  011F                     l1265:	
   488                           
   489                           ;slaveMOtorS2.c: 112: {;slaveMOtorS2.c: 113:             full_drive(0);
   490  011F  3000               	movlw	0
   491  0120  120A  118A  2019  120A  118A  	fcall	_full_drive
   492  0125                     l1267:	
   493                           
   494                           ;slaveMOtorS2.c: 114: }
   495  0125  3001               	movlw	1
   496  0126  07F6               	addwf	main@i,f
   497  0127  1803               	skipnc
   498  0128  0AF7               	incf	main@i+1,f
   499  0129  3000               	movlw	0
   500  012A  07F7               	addwf	main@i+1,f
   501  012B                     l1269:	
   502  012B  0877               	movf	main@i+1,w
   503  012C  3A80               	xorlw	128
   504  012D  00FF               	movwf	btemp+1
   505  012E  3080               	movlw	128
   506  012F  027F               	subwf	btemp+1,w
   507  0130  1D03               	skipz
   508  0131  2934               	goto	u485
   509  0132  30FA               	movlw	250
   510  0133  0276               	subwf	main@i,w
   511  0134                     u485:	
   512  0134  1C03               	skipc
   513  0135  2937               	goto	u481
   514  0136  2938               	goto	u480
   515  0137                     u481:	
   516  0137  291F               	goto	l1265
   517  0138                     u480:	
   518  0138                     l1271:	
   519                           
   520                           ;slaveMOtorS2.c: 116: ms_delay(1000);
   521  0138  30E8               	movlw	232
   522  0139  00F3               	movwf	ms_delay@val
   523  013A  3003               	movlw	3
   524  013B  00F4               	movwf	ms_delay@val+1
   525  013C  120A  118A  2148  120A  118A  	fcall	_ms_delay
   526  0141                     l1273:	
   527                           
   528                           ;slaveMOtorS2.c: 119:     a=0;
   529  0141  1283               	bcf	3,5	;RP0=0, select bank0
   530  0142  1303               	bcf	3,6	;RP1=0, select bank0
   531  0143  01A4               	clrf	_a
   532  0144  2916               	goto	l1257
   533  0145  120A  118A  280C   	ljmp	start
   534  0148                     __end_of_main:	
   535                           
   536                           	psect	text1
   537  019D                     __ptext1:	
   538 ;; *************** function _system_init *****************
   539 ;; Defined at:
   540 ;;		line 125 in file "slaveMOtorS2.c"
   541 ;; Parameters:    Size  Location     Type
   542 ;;		None
   543 ;; Auto vars:     Size  Location     Type
   544 ;;		None
   545 ;; Return value:  Size  Location     Type
   546 ;;                  1    wreg      void 
   547 ;; Registers used:
   548 ;;		wreg, status,2
   549 ;; Tracked objects:
   550 ;;		On entry : 0/0
   551 ;;		On exit  : 0/0
   552 ;;		Unchanged: 0/0
   553 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   554 ;;      Params:         0       0       0       0       0
   555 ;;      Locals:         0       0       0       0       0
   556 ;;      Temps:          0       0       0       0       0
   557 ;;      Totals:         0       0       0       0       0
   558 ;;Total ram usage:        0 bytes
   559 ;; Hardware stack levels used:    1
   560 ;; Hardware stack levels required when called:    1
   561 ;; This function calls:
   562 ;;		Nothing
   563 ;; This function is called by:
   564 ;;		_main
   565 ;; This function uses a non-reentrant model
   566 ;;
   567                           
   568                           
   569                           ;psect for function _system_init
   570  019D                     _system_init:	
   571  019D                     l1219:	
   572                           ;incstack = 0
   573                           ; Regs used in _system_init: [wreg+status,2]
   574                           
   575                           
   576                           ;slaveMOtorS2.c: 126:     TRISB = 0x00;
   577  019D  1683               	bsf	3,5	;RP0=1, select bank1
   578  019E  1303               	bcf	3,6	;RP1=0, select bank1
   579  019F  0186               	clrf	6	;volatile
   580  01A0                     l1221:	
   581                           
   582                           ;slaveMOtorS2.c: 127:     PORTB = 0x0F;
   583  01A0  300F               	movlw	15
   584  01A1  1283               	bcf	3,5	;RP0=0, select bank0
   585  01A2  1303               	bcf	3,6	;RP1=0, select bank0
   586  01A3  0086               	movwf	6	;volatile
   587  01A4                     l129:	
   588  01A4  0008               	return
   589  01A5                     __end_of_system_init:	
   590                           
   591                           	psect	text2
   592  0189                     __ptext2:	
   593 ;; *************** function _setup *****************
   594 ;; Defined at:
   595 ;;		line 247 in file "slaveMOtorS2.c"
   596 ;; Parameters:    Size  Location     Type
   597 ;;		None
   598 ;; Auto vars:     Size  Location     Type
   599 ;;		None
   600 ;; Return value:  Size  Location     Type
   601 ;;                  1    wreg      void 
   602 ;; Registers used:
   603 ;;		wreg, status,2, status,0, pclath, cstack
   604 ;; Tracked objects:
   605 ;;		On entry : 0/0
   606 ;;		On exit  : 0/0
   607 ;;		Unchanged: 0/0
   608 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   609 ;;      Params:         0       0       0       0       0
   610 ;;      Locals:         0       0       0       0       0
   611 ;;      Temps:          0       0       0       0       0
   612 ;;      Totals:         0       0       0       0       0
   613 ;;Total ram usage:        0 bytes
   614 ;; Hardware stack levels used:    1
   615 ;; Hardware stack levels required when called:    2
   616 ;; This function calls:
   617 ;;		_I2C_Slave_Init
   618 ;; This function is called by:
   619 ;;		_main
   620 ;; This function uses a non-reentrant model
   621 ;;
   622                           
   623                           
   624                           ;psect for function _setup
   625  0189                     _setup:	
   626  0189                     l1213:	
   627                           ;incstack = 0
   628                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
   629                           
   630                           
   631                           ;slaveMOtorS2.c: 248:     ANSEL = 0;
   632  0189  1683               	bsf	3,5	;RP0=1, select bank3
   633  018A  1703               	bsf	3,6	;RP1=1, select bank3
   634  018B  0188               	clrf	8	;volatile
   635                           
   636                           ;slaveMOtorS2.c: 249:     ANSELH = 0;
   637  018C  0189               	clrf	9	;volatile
   638                           
   639                           ;slaveMOtorS2.c: 251:     TRISB = 0;
   640  018D  1683               	bsf	3,5	;RP0=1, select bank1
   641  018E  1303               	bcf	3,6	;RP1=0, select bank1
   642  018F  0186               	clrf	6	;volatile
   643                           
   644                           ;slaveMOtorS2.c: 252:     TRISD = 0;
   645  0190  0188               	clrf	8	;volatile
   646                           
   647                           ;slaveMOtorS2.c: 254:     PORTB = 0;
   648  0191  1283               	bcf	3,5	;RP0=0, select bank0
   649  0192  1303               	bcf	3,6	;RP1=0, select bank0
   650  0193  0186               	clrf	6	;volatile
   651                           
   652                           ;slaveMOtorS2.c: 255:     PORTD = 0;
   653  0194  0188               	clrf	8	;volatile
   654  0195                     l1215:	
   655                           
   656                           ;slaveMOtorS2.c: 256:     PORTBbits.RB1=1;
   657  0195  1486               	bsf	6,1	;volatile
   658  0196                     l1217:	
   659                           
   660                           ;slaveMOtorS2.c: 257:     I2C_Slave_Init(0x30);
   661  0196  3030               	movlw	48
   662  0197  120A  118A  216F  120A  118A  	fcall	_I2C_Slave_Init
   663  019C                     l155:	
   664  019C  0008               	return
   665  019D                     __end_of_setup:	
   666                           
   667                           	psect	text3
   668  016F                     __ptext3:	
   669 ;; *************** function _I2C_Slave_Init *****************
   670 ;; Defined at:
   671 ;;		line 93 in file "I2C.c"
   672 ;; Parameters:    Size  Location     Type
   673 ;;  address         1    wreg     unsigned char 
   674 ;; Auto vars:     Size  Location     Type
   675 ;;  address         1    3[COMMON] unsigned char 
   676 ;; Return value:  Size  Location     Type
   677 ;;                  1    wreg      void 
   678 ;; Registers used:
   679 ;;		wreg
   680 ;; Tracked objects:
   681 ;;		On entry : 0/0
   682 ;;		On exit  : 0/0
   683 ;;		Unchanged: 0/0
   684 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   685 ;;      Params:         0       0       0       0       0
   686 ;;      Locals:         1       0       0       0       0
   687 ;;      Temps:          0       0       0       0       0
   688 ;;      Totals:         1       0       0       0       0
   689 ;;Total ram usage:        1 bytes
   690 ;; Hardware stack levels used:    1
   691 ;; Hardware stack levels required when called:    1
   692 ;; This function calls:
   693 ;;		Nothing
   694 ;; This function is called by:
   695 ;;		_setup
   696 ;; This function uses a non-reentrant model
   697 ;;
   698                           
   699                           
   700                           ;psect for function _I2C_Slave_Init
   701  016F                     _I2C_Slave_Init:	
   702                           
   703                           ;incstack = 0
   704                           ; Regs used in _I2C_Slave_Init: [wreg]
   705                           ;I2C_Slave_Init@address stored from wreg
   706  016F  00F3               	movwf	I2C_Slave_Init@address
   707  0170                     l1187:	
   708                           
   709                           ;I2C.c: 95:     SSPADD = address;
   710  0170  0873               	movf	I2C_Slave_Init@address,w
   711  0171  1683               	bsf	3,5	;RP0=1, select bank1
   712  0172  1303               	bcf	3,6	;RP1=0, select bank1
   713  0173  0093               	movwf	19	;volatile
   714                           
   715                           ;I2C.c: 96:     SSPCON = 0x36;
   716  0174  3036               	movlw	54
   717  0175  1283               	bcf	3,5	;RP0=0, select bank0
   718  0176  1303               	bcf	3,6	;RP1=0, select bank0
   719  0177  0094               	movwf	20	;volatile
   720                           
   721                           ;I2C.c: 97:     SSPSTAT = 0x80;
   722  0178  3080               	movlw	128
   723  0179  1683               	bsf	3,5	;RP0=1, select bank1
   724  017A  1303               	bcf	3,6	;RP1=0, select bank1
   725  017B  0094               	movwf	20	;volatile
   726                           
   727                           ;I2C.c: 98:     SSPCON2 = 0x01;
   728  017C  3001               	movlw	1
   729  017D  0091               	movwf	17	;volatile
   730  017E                     l1189:	
   731                           
   732                           ;I2C.c: 99:     TRISCbits.TRISC4 = 1;
   733  017E  1607               	bsf	7,4	;volatile
   734  017F                     l1191:	
   735                           
   736                           ;I2C.c: 100:     TRISCbits.TRISC3 = 1;
   737  017F  1587               	bsf	7,3	;volatile
   738  0180                     l1193:	
   739                           
   740                           ;I2C.c: 101:     GIE = 1;
   741  0180  178B               	bsf	11,7	;volatile
   742  0181                     l1195:	
   743                           
   744                           ;I2C.c: 102:     PEIE = 1;
   745  0181  170B               	bsf	11,6	;volatile
   746  0182                     l1197:	
   747                           
   748                           ;I2C.c: 103:     SSPIF = 0;
   749  0182  1283               	bcf	3,5	;RP0=0, select bank0
   750  0183  1303               	bcf	3,6	;RP1=0, select bank0
   751  0184  118C               	bcf	12,3	;volatile
   752  0185                     l1199:	
   753                           
   754                           ;I2C.c: 104:     SSPIE = 1;
   755  0185  1683               	bsf	3,5	;RP0=1, select bank1
   756  0186  1303               	bcf	3,6	;RP1=0, select bank1
   757  0187  158C               	bsf	12,3	;volatile
   758  0188                     l51:	
   759  0188  0008               	return
   760  0189                     __end_of_I2C_Slave_Init:	
   761                           
   762                           	psect	text4
   763  0019                     __ptext4:	
   764 ;; *************** function _full_drive *****************
   765 ;; Defined at:
   766 ;;		line 132 in file "slaveMOtorS2.c"
   767 ;; Parameters:    Size  Location     Type
   768 ;;  direction       1    wreg     unsigned char 
   769 ;; Auto vars:     Size  Location     Type
   770 ;;  direction       1    5[COMMON] unsigned char 
   771 ;; Return value:  Size  Location     Type
   772 ;;                  1    wreg      void 
   773 ;; Registers used:
   774 ;;		wreg, status,2, status,0, pclath, cstack
   775 ;; Tracked objects:
   776 ;;		On entry : 0/0
   777 ;;		On exit  : 0/0
   778 ;;		Unchanged: 0/0
   779 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   780 ;;      Params:         0       0       0       0       0
   781 ;;      Locals:         1       0       0       0       0
   782 ;;      Temps:          0       0       0       0       0
   783 ;;      Totals:         1       0       0       0       0
   784 ;;Total ram usage:        1 bytes
   785 ;; Hardware stack levels used:    1
   786 ;; Hardware stack levels required when called:    2
   787 ;; This function calls:
   788 ;;		_ms_delay
   789 ;; This function is called by:
   790 ;;		_main
   791 ;; This function uses a non-reentrant model
   792 ;;
   793                           
   794                           
   795                           ;psect for function _full_drive
   796  0019                     _full_drive:	
   797                           
   798                           ;incstack = 0
   799                           ; Regs used in _full_drive: [wreg+status,2+status,0+pclath+cstack]
   800                           ;full_drive@direction stored from wreg
   801  0019  00F5               	movwf	full_drive@direction
   802  001A                     l1223:	
   803                           
   804                           ;slaveMOtorS2.c: 133:     if (direction == 1){
   805  001A  0375               	decf	full_drive@direction,w
   806  001B  1D03               	btfss	3,2
   807  001C  281E               	goto	u451
   808  001D  281F               	goto	u450
   809  001E                     u451:	
   810  001E  2860               	goto	l1239
   811  001F                     u450:	
   812  001F                     l1225:	
   813                           
   814                           ;slaveMOtorS2.c: 134:         PORTB = 0b00000011;
   815  001F  3003               	movlw	3
   816  0020  1283               	bcf	3,5	;RP0=0, select bank0
   817  0021  1303               	bcf	3,6	;RP1=0, select bank0
   818  0022  0086               	movwf	6	;volatile
   819  0023                     l1227:	
   820                           
   821                           ;slaveMOtorS2.c: 135:         ms_delay(1);
   822  0023  3001               	movlw	1
   823  0024  00F3               	movwf	ms_delay@val
   824  0025  3000               	movlw	0
   825  0026  00F4               	movwf	ms_delay@val+1
   826  0027  120A  118A  2148  120A  118A  	fcall	_ms_delay
   827  002C                     l1229:	
   828                           
   829                           ;slaveMOtorS2.c: 136:         PORTB = 0b00000110;
   830  002C  3006               	movlw	6
   831  002D  1283               	bcf	3,5	;RP0=0, select bank0
   832  002E  1303               	bcf	3,6	;RP1=0, select bank0
   833  002F  0086               	movwf	6	;volatile
   834                           
   835                           ;slaveMOtorS2.c: 137:         ms_delay(1);
   836  0030  3001               	movlw	1
   837  0031  00F3               	movwf	ms_delay@val
   838  0032  3000               	movlw	0
   839  0033  00F4               	movwf	ms_delay@val+1
   840  0034  120A  118A  2148  120A  118A  	fcall	_ms_delay
   841  0039                     l1231:	
   842                           
   843                           ;slaveMOtorS2.c: 138:         PORTB = 0b00001100;
   844  0039  300C               	movlw	12
   845  003A  1283               	bcf	3,5	;RP0=0, select bank0
   846  003B  1303               	bcf	3,6	;RP1=0, select bank0
   847  003C  0086               	movwf	6	;volatile
   848  003D                     l1233:	
   849                           
   850                           ;slaveMOtorS2.c: 139:         ms_delay(1);
   851  003D  3001               	movlw	1
   852  003E  00F3               	movwf	ms_delay@val
   853  003F  3000               	movlw	0
   854  0040  00F4               	movwf	ms_delay@val+1
   855  0041  120A  118A  2148  120A  118A  	fcall	_ms_delay
   856                           
   857                           ;slaveMOtorS2.c: 140:         PORTB = 0b00001001;
   858  0046  3009               	movlw	9
   859  0047  1283               	bcf	3,5	;RP0=0, select bank0
   860  0048  1303               	bcf	3,6	;RP1=0, select bank0
   861  0049  0086               	movwf	6	;volatile
   862  004A                     l1235:	
   863                           
   864                           ;slaveMOtorS2.c: 141:         ms_delay(1);
   865  004A  3001               	movlw	1
   866  004B  00F3               	movwf	ms_delay@val
   867  004C  3000               	movlw	0
   868  004D  00F4               	movwf	ms_delay@val+1
   869  004E  120A  118A  2148  120A  118A  	fcall	_ms_delay
   870  0053                     l1237:	
   871                           
   872                           ;slaveMOtorS2.c: 142:         PORTB = 0b00000011;
   873  0053  3003               	movlw	3
   874  0054  1283               	bcf	3,5	;RP0=0, select bank0
   875  0055  1303               	bcf	3,6	;RP1=0, select bank0
   876  0056  0086               	movwf	6	;volatile
   877                           
   878                           ;slaveMOtorS2.c: 143:         ms_delay(1);
   879  0057  3001               	movlw	1
   880  0058  00F3               	movwf	ms_delay@val
   881  0059  3000               	movlw	0
   882  005A  00F4               	movwf	ms_delay@val+1
   883  005B  120A  118A  2148  120A  118A  	fcall	_ms_delay
   884  0060                     l1239:	
   885                           
   886                           ;slaveMOtorS2.c: 145:     if (direction == 0){
   887  0060  0875               	movf	full_drive@direction,w
   888  0061  1D03               	btfss	3,2
   889  0062  2864               	goto	u461
   890  0063  2865               	goto	u460
   891  0064                     u461:	
   892  0064  28A6               	goto	l134
   893  0065                     u460:	
   894  0065                     l1241:	
   895                           
   896                           ;slaveMOtorS2.c: 146:         PORTB = 0b00001001;
   897  0065  3009               	movlw	9
   898  0066  1283               	bcf	3,5	;RP0=0, select bank0
   899  0067  1303               	bcf	3,6	;RP1=0, select bank0
   900  0068  0086               	movwf	6	;volatile
   901  0069                     l1243:	
   902                           
   903                           ;slaveMOtorS2.c: 147:         ms_delay(1);
   904  0069  3001               	movlw	1
   905  006A  00F3               	movwf	ms_delay@val
   906  006B  3000               	movlw	0
   907  006C  00F4               	movwf	ms_delay@val+1
   908  006D  120A  118A  2148  120A  118A  	fcall	_ms_delay
   909  0072                     l1245:	
   910                           
   911                           ;slaveMOtorS2.c: 148:         PORTB = 0b00001100;
   912  0072  300C               	movlw	12
   913  0073  1283               	bcf	3,5	;RP0=0, select bank0
   914  0074  1303               	bcf	3,6	;RP1=0, select bank0
   915  0075  0086               	movwf	6	;volatile
   916                           
   917                           ;slaveMOtorS2.c: 149:         ms_delay(1);
   918  0076  3001               	movlw	1
   919  0077  00F3               	movwf	ms_delay@val
   920  0078  3000               	movlw	0
   921  0079  00F4               	movwf	ms_delay@val+1
   922  007A  120A  118A  2148  120A  118A  	fcall	_ms_delay
   923  007F                     l1247:	
   924                           
   925                           ;slaveMOtorS2.c: 150:         PORTB = 0b00000110;
   926  007F  3006               	movlw	6
   927  0080  1283               	bcf	3,5	;RP0=0, select bank0
   928  0081  1303               	bcf	3,6	;RP1=0, select bank0
   929  0082  0086               	movwf	6	;volatile
   930  0083                     l1249:	
   931                           
   932                           ;slaveMOtorS2.c: 151:         ms_delay(1);
   933  0083  3001               	movlw	1
   934  0084  00F3               	movwf	ms_delay@val
   935  0085  3000               	movlw	0
   936  0086  00F4               	movwf	ms_delay@val+1
   937  0087  120A  118A  2148  120A  118A  	fcall	_ms_delay
   938                           
   939                           ;slaveMOtorS2.c: 152:         PORTB = 0b00000011;
   940  008C  3003               	movlw	3
   941  008D  1283               	bcf	3,5	;RP0=0, select bank0
   942  008E  1303               	bcf	3,6	;RP1=0, select bank0
   943  008F  0086               	movwf	6	;volatile
   944  0090                     l1251:	
   945                           
   946                           ;slaveMOtorS2.c: 153:         ms_delay(1);
   947  0090  3001               	movlw	1
   948  0091  00F3               	movwf	ms_delay@val
   949  0092  3000               	movlw	0
   950  0093  00F4               	movwf	ms_delay@val+1
   951  0094  120A  118A  2148  120A  118A  	fcall	_ms_delay
   952  0099                     l1253:	
   953                           
   954                           ;slaveMOtorS2.c: 154:         PORTB = 0b00001001;
   955  0099  3009               	movlw	9
   956  009A  1283               	bcf	3,5	;RP0=0, select bank0
   957  009B  1303               	bcf	3,6	;RP1=0, select bank0
   958  009C  0086               	movwf	6	;volatile
   959                           
   960                           ;slaveMOtorS2.c: 155:         ms_delay(1);
   961  009D  3001               	movlw	1
   962  009E  00F3               	movwf	ms_delay@val
   963  009F  3000               	movlw	0
   964  00A0  00F4               	movwf	ms_delay@val+1
   965  00A1  120A  118A  2148  120A  118A  	fcall	_ms_delay
   966  00A6                     l134:	
   967  00A6  0008               	return
   968  00A7                     __end_of_full_drive:	
   969                           
   970                           	psect	text5
   971  0148                     __ptext5:	
   972 ;; *************** function _ms_delay *****************
   973 ;; Defined at:
   974 ;;		line 229 in file "slaveMOtorS2.c"
   975 ;; Parameters:    Size  Location     Type
   976 ;;  val             2    3[COMMON] unsigned int 
   977 ;; Auto vars:     Size  Location     Type
   978 ;;  j               2    2[BANK0 ] unsigned int 
   979 ;;  i               2    0[BANK0 ] unsigned int 
   980 ;; Return value:  Size  Location     Type
   981 ;;                  1    wreg      void 
   982 ;; Registers used:
   983 ;;		wreg, status,2
   984 ;; Tracked objects:
   985 ;;		On entry : 0/0
   986 ;;		On exit  : 0/0
   987 ;;		Unchanged: 0/0
   988 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   989 ;;      Params:         2       0       0       0       0
   990 ;;      Locals:         0       4       0       0       0
   991 ;;      Temps:          0       0       0       0       0
   992 ;;      Totals:         2       4       0       0       0
   993 ;;Total ram usage:        6 bytes
   994 ;; Hardware stack levels used:    1
   995 ;; Hardware stack levels required when called:    1
   996 ;; This function calls:
   997 ;;		Nothing
   998 ;; This function is called by:
   999 ;;		_main
  1000 ;;		_full_drive
  1001 ;;		_half_drive
  1002 ;;		_wave_drive
  1003 ;; This function uses a non-reentrant model
  1004 ;;
  1005                           
  1006                           
  1007                           ;psect for function _ms_delay
  1008  0148                     _ms_delay:	
  1009  0148                     l1201:	
  1010                           ;incstack = 0
  1011                           ; Regs used in _ms_delay: [wreg+status,2]
  1012                           
  1013                           
  1014                           ;slaveMOtorS2.c: 229: void ms_delay(unsigned int val);slaveMOtorS2.c: 230: {;slaveMOtorS
      +                          2.c: 231:      unsigned int i,j;;slaveMOtorS2.c: 232:         for(i=0;i<val;i++)
  1015  0148  1283               	bcf	3,5	;RP0=0, select bank0
  1016  0149  1303               	bcf	3,6	;RP1=0, select bank0
  1017  014A  01A0               	clrf	ms_delay@i
  1018  014B  01A1               	clrf	ms_delay@i+1
  1019  014C  2964               	goto	l147
  1020  014D                     l1203:	
  1021                           
  1022                           ;slaveMOtorS2.c: 233:             for(j=0;j<1650;j++);
  1023  014D  01A2               	clrf	ms_delay@j
  1024  014E  01A3               	clrf	ms_delay@j+1
  1025  014F                     l1209:	
  1026  014F  3001               	movlw	1
  1027  0150  07A2               	addwf	ms_delay@j,f
  1028  0151  1803               	skipnc
  1029  0152  0AA3               	incf	ms_delay@j+1,f
  1030  0153  3000               	movlw	0
  1031  0154  07A3               	addwf	ms_delay@j+1,f
  1032  0155  3006               	movlw	6
  1033  0156  0223               	subwf	ms_delay@j+1,w
  1034  0157  3072               	movlw	114
  1035  0158  1903               	skipnz
  1036  0159  0222               	subwf	ms_delay@j,w
  1037  015A  1C03               	skipc
  1038  015B  295D               	goto	u431
  1039  015C  295E               	goto	u430
  1040  015D                     u431:	
  1041  015D  294F               	goto	l1209
  1042  015E                     u430:	
  1043  015E                     l1211:	
  1044  015E  3001               	movlw	1
  1045  015F  07A0               	addwf	ms_delay@i,f
  1046  0160  1803               	skipnc
  1047  0161  0AA1               	incf	ms_delay@i+1,f
  1048  0162  3000               	movlw	0
  1049  0163  07A1               	addwf	ms_delay@i+1,f
  1050  0164                     l147:	
  1051  0164  0874               	movf	ms_delay@val+1,w
  1052  0165  0221               	subwf	ms_delay@i+1,w
  1053  0166  1D03               	skipz
  1054  0167  296A               	goto	u445
  1055  0168  0873               	movf	ms_delay@val,w
  1056  0169  0220               	subwf	ms_delay@i,w
  1057  016A                     u445:	
  1058  016A  1C03               	skipc
  1059  016B  296D               	goto	u441
  1060  016C  296E               	goto	u440
  1061  016D                     u441:	
  1062  016D  294D               	goto	l1203
  1063  016E                     u440:	
  1064  016E                     l152:	
  1065  016E  0008               	return
  1066  016F                     __end_of_ms_delay:	
  1067                           
  1068                           	psect	text6
  1069  00A7                     __ptext6:	
  1070 ;; *************** function _isr *****************
  1071 ;; Defined at:
  1072 ;;		line 64 in file "slaveMOtorS2.c"
  1073 ;; Parameters:    Size  Location     Type
  1074 ;;		None
  1075 ;; Auto vars:     Size  Location     Type
  1076 ;;		None
  1077 ;; Return value:  Size  Location     Type
  1078 ;;                  1    wreg      void 
  1079 ;; Registers used:
  1080 ;;		wreg
  1081 ;; Tracked objects:
  1082 ;;		On entry : 0/0
  1083 ;;		On exit  : 0/0
  1084 ;;		Unchanged: 0/0
  1085 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1086 ;;      Params:         0       0       0       0       0
  1087 ;;      Locals:         0       0       0       0       0
  1088 ;;      Temps:          3       0       0       0       0
  1089 ;;      Totals:         3       0       0       0       0
  1090 ;;Total ram usage:        3 bytes
  1091 ;; Hardware stack levels used:    1
  1092 ;; This function calls:
  1093 ;;		Nothing
  1094 ;; This function is called by:
  1095 ;;		Interrupt level 1
  1096 ;; This function uses a non-reentrant model
  1097 ;;
  1098                           
  1099                           
  1100                           ;psect for function _isr
  1101  00A7                     _isr:	
  1102  00A7                     i1l1057:	
  1103                           
  1104                           ;slaveMOtorS2.c: 65:    if(PIR1bits.SSPIF == 1){
  1105  00A7  1283               	bcf	3,5	;RP0=0, select bank0
  1106  00A8  1303               	bcf	3,6	;RP1=0, select bank0
  1107  00A9  1D8C               	btfss	12,3	;volatile
  1108  00AA  28AC               	goto	u28_21
  1109  00AB  28AD               	goto	u28_20
  1110  00AC                     u28_21:	
  1111  00AC  2905               	goto	i1l115
  1112  00AD                     u28_20:	
  1113  00AD                     i1l1059:	
  1114                           
  1115                           ;slaveMOtorS2.c: 67:         SSPCONbits.CKP = 0;
  1116  00AD  1214               	bcf	20,4	;volatile
  1117                           
  1118                           ;slaveMOtorS2.c: 68:         a=1;
  1119  00AE  01A4               	clrf	_a
  1120  00AF  0AA4               	incf	_a,f
  1121                           
  1122                           ;slaveMOtorS2.c: 71:         if ((SSPCONbits.SSPOV) || (SSPCONbits.WCOL)){
  1123  00B0  1B14               	btfsc	20,6	;volatile
  1124  00B1  28B3               	goto	u29_21
  1125  00B2  28B4               	goto	u29_20
  1126  00B3                     u29_21:	
  1127  00B3  28B8               	goto	i1l1063
  1128  00B4                     u29_20:	
  1129  00B4                     i1l1061:	
  1130  00B4  1F94               	btfss	20,7	;volatile
  1131  00B5  28B7               	goto	u30_21
  1132  00B6  28B8               	goto	u30_20
  1133  00B7                     u30_21:	
  1134  00B7  28BF               	goto	i1l1071
  1135  00B8                     u30_20:	
  1136  00B8                     i1l1063:	
  1137                           
  1138                           ;slaveMOtorS2.c: 72:             z = SSPBUF;
  1139  00B8  0813               	movf	19,w	;volatile
  1140  00B9  00F0               	movwf	??_isr
  1141  00BA  0870               	movf	??_isr,w
  1142  00BB  00FA               	movwf	_z
  1143  00BC                     i1l1065:	
  1144                           
  1145                           ;slaveMOtorS2.c: 73:             SSPCONbits.SSPOV = 0;
  1146  00BC  1314               	bcf	20,6	;volatile
  1147  00BD                     i1l1067:	
  1148                           
  1149                           ;slaveMOtorS2.c: 74:             SSPCONbits.WCOL = 0;
  1150  00BD  1394               	bcf	20,7	;volatile
  1151  00BE                     i1l1069:	
  1152                           
  1153                           ;slaveMOtorS2.c: 75:             SSPCONbits.CKP = 1;
  1154  00BE  1614               	bsf	20,4	;volatile
  1155  00BF                     i1l1071:	
  1156                           
  1157                           ;slaveMOtorS2.c: 78:         if(!SSPSTATbits.D_nA && !SSPSTATbits.R_nW) {
  1158  00BF  1683               	bsf	3,5	;RP0=1, select bank1
  1159  00C0  1303               	bcf	3,6	;RP1=0, select bank1
  1160  00C1  1A94               	btfsc	20,5	;volatile
  1161  00C2  28C4               	goto	u31_21
  1162  00C3  28C5               	goto	u31_20
  1163  00C4                     u31_21:	
  1164  00C4  28E1               	goto	i1l106
  1165  00C5                     u31_20:	
  1166  00C5                     i1l1073:	
  1167  00C5  1914               	btfsc	20,2	;volatile
  1168  00C6  28C8               	goto	u32_21
  1169  00C7  28C9               	goto	u32_20
  1170  00C8                     u32_21:	
  1171  00C8  28E1               	goto	i1l106
  1172  00C9                     u32_20:	
  1173  00C9                     i1l1075:	
  1174                           
  1175                           ;slaveMOtorS2.c: 80:             z = SSPBUF;
  1176  00C9  1283               	bcf	3,5	;RP0=0, select bank0
  1177  00CA  1303               	bcf	3,6	;RP1=0, select bank0
  1178  00CB  0813               	movf	19,w	;volatile
  1179  00CC  00F0               	movwf	??_isr
  1180  00CD  0870               	movf	??_isr,w
  1181  00CE  00FA               	movwf	_z
  1182  00CF                     i1l1077:	
  1183                           
  1184                           ;slaveMOtorS2.c: 83:             PIR1bits.SSPIF = 0;
  1185  00CF  118C               	bcf	12,3	;volatile
  1186  00D0                     i1l1079:	
  1187                           
  1188                           ;slaveMOtorS2.c: 84:             SSPCONbits.CKP = 1;
  1189  00D0  1614               	bsf	20,4	;volatile
  1190  00D1                     i1l107:	
  1191                           ;slaveMOtorS2.c: 85:             while(!SSPSTATbits.BF);
  1192                           
  1193  00D1  1683               	bsf	3,5	;RP0=1, select bank1
  1194  00D2  1303               	bcf	3,6	;RP1=0, select bank1
  1195  00D3  1C14               	btfss	20,0	;volatile
  1196  00D4  28D6               	goto	u33_21
  1197  00D5  28D7               	goto	u33_20
  1198  00D6                     u33_21:	
  1199  00D6  28D1               	goto	i1l107
  1200  00D7                     u33_20:	
  1201  00D7                     i1l1081:	
  1202                           
  1203                           ;slaveMOtorS2.c: 86:             PORTD = SSPBUF;
  1204  00D7  1283               	bcf	3,5	;RP0=0, select bank0
  1205  00D8  1303               	bcf	3,6	;RP1=0, select bank0
  1206  00D9  0813               	movf	19,w	;volatile
  1207  00DA  0088               	movwf	8	;volatile
  1208                           
  1209                           ;slaveMOtorS2.c: 87:             _delay((unsigned long)((250)*(8000000/4000000.0)));
  1210  00DB  30A6               	movlw	166
  1211  00DC  00F0               	movwf	??_isr
  1212  00DD                     u53_27:	
  1213  00DD  0BF0               	decfsz	??_isr,f
  1214  00DE  28DD               	goto	u53_27
  1215  00DF  0000               	nop
  1216                           
  1217                           ;slaveMOtorS2.c: 89:         }else if(!SSPSTATbits.D_nA && SSPSTATbits.R_nW){
  1218  00E0  2902               	goto	i1l110
  1219  00E1                     i1l106:	
  1220  00E1  1A94               	btfsc	20,5	;volatile
  1221  00E2  28E4               	goto	u34_21
  1222  00E3  28E5               	goto	u34_20
  1223  00E4                     u34_21:	
  1224  00E4  2902               	goto	i1l110
  1225  00E5                     u34_20:	
  1226  00E5                     i1l1083:	
  1227  00E5  1D14               	btfss	20,2	;volatile
  1228  00E6  28E8               	goto	u35_21
  1229  00E7  28E9               	goto	u35_20
  1230  00E8                     u35_21:	
  1231  00E8  2902               	goto	i1l110
  1232  00E9                     u35_20:	
  1233  00E9                     i1l1085:	
  1234                           
  1235                           ;slaveMOtorS2.c: 90:             z = SSPBUF;
  1236  00E9  1283               	bcf	3,5	;RP0=0, select bank0
  1237  00EA  1303               	bcf	3,6	;RP1=0, select bank0
  1238  00EB  0813               	movf	19,w	;volatile
  1239  00EC  00F0               	movwf	??_isr
  1240  00ED  0870               	movf	??_isr,w
  1241  00EE  00FA               	movwf	_z
  1242  00EF                     i1l1087:	
  1243                           
  1244                           ;slaveMOtorS2.c: 91:             BF = 0;
  1245  00EF  1683               	bsf	3,5	;RP0=1, select bank1
  1246  00F0  1303               	bcf	3,6	;RP1=0, select bank1
  1247  00F1  1014               	bcf	20,0	;volatile
  1248                           
  1249                           ;slaveMOtorS2.c: 92:             SSPBUF = ADRESH;
  1250  00F2  1283               	bcf	3,5	;RP0=0, select bank0
  1251  00F3  1303               	bcf	3,6	;RP1=0, select bank0
  1252  00F4  081E               	movf	30,w	;volatile
  1253  00F5  0093               	movwf	19	;volatile
  1254  00F6                     i1l1089:	
  1255                           
  1256                           ;slaveMOtorS2.c: 93:             SSPCONbits.CKP = 1;
  1257  00F6  1614               	bsf	20,4	;volatile
  1258                           
  1259                           ;slaveMOtorS2.c: 94:             _delay((unsigned long)((250)*(8000000/4000000.0)));
  1260  00F7  30A6               	movlw	166
  1261  00F8  00F0               	movwf	??_isr
  1262  00F9                     u54_27:	
  1263  00F9  0BF0               	decfsz	??_isr,f
  1264  00FA  28F9               	goto	u54_27
  1265  00FB  0000               	nop
  1266  00FC                     i1l112:	
  1267                           ;slaveMOtorS2.c: 95:             while(SSPSTATbits.BF);
  1268                           
  1269  00FC  1683               	bsf	3,5	;RP0=1, select bank1
  1270  00FD  1303               	bcf	3,6	;RP1=0, select bank1
  1271  00FE  1814               	btfsc	20,0	;volatile
  1272  00FF  2901               	goto	u36_21
  1273  0100  2902               	goto	u36_20
  1274  0101                     u36_21:	
  1275  0101  28FC               	goto	i1l112
  1276  0102                     u36_20:	
  1277  0102                     i1l110:	
  1278                           
  1279                           ;slaveMOtorS2.c: 98:         PIR1bits.SSPIF = 0;
  1280  0102  1283               	bcf	3,5	;RP0=0, select bank0
  1281  0103  1303               	bcf	3,6	;RP1=0, select bank0
  1282  0104  118C               	bcf	12,3	;volatile
  1283  0105                     i1l115:	
  1284  0105  0872               	movf	??_isr+2,w
  1285  0106  008A               	movwf	10
  1286  0107  0E71               	swapf	(??_isr+1)^(0+4294967168),w
  1287  0108  0083               	movwf	3
  1288  0109  0EFE               	swapf	btemp,f
  1289  010A  0E7E               	swapf	btemp,w
  1290  010B  0009               	retfie
  1291  010C                     __end_of_isr:	
  1292  007E                     btemp	set	126	;btemp
  1293  007E                     wtemp0	set	126
  1294                           
  1295                           	psect	intentry
  1296  0004                     __pintentry:	
  1297                           ;incstack = 0
  1298                           ; Regs used in _isr: [wreg]
  1299                           
  1300  0004                     interrupt_function:	
  1301  007E                     saved_w	set	btemp
  1302  0004  00FE               	movwf	btemp
  1303  0005  0E03               	swapf	3,w
  1304  0006  00F1               	movwf	??_isr+1
  1305  0007  080A               	movf	10,w
  1306  0008  00F2               	movwf	??_isr+2
  1307  0009  120A  118A  28A7   	ljmp	_isr


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      11
    BANK0            80      4       5
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_full_drive
    _setup->_I2C_Slave_Init
    _full_drive->_ms_delay

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_ms_delay
    _full_drive->_ms_delay

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    6733
                                              6 COMMON     2     2      0
                         _full_drive
                           _ms_delay
                              _setup
                        _system_init
 ---------------------------------------------------------------------------------
 (1) _system_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0      31
                     _I2C_Slave_Init
 ---------------------------------------------------------------------------------
 (2) _I2C_Slave_Init                                       1     1      0      31
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _full_drive                                           1     1      0    3348
                                              5 COMMON     1     1      0
                           _ms_delay
 ---------------------------------------------------------------------------------
 (1) _ms_delay                                             6     4      2    3286
                                              3 COMMON     2     0      2
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _full_drive
     _ms_delay
   _ms_delay
   _setup
     _I2C_Slave_Init
   _system_init

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      10       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      4       5       5        6.3%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      10      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Mon May 11 18:18:03 2020

                       _a 0024                         _z 007A               __CFG_CP$OFF 0000  
             _SSPSTATbits 0094                        _BF 04A0                        l51 0188  
     __end_of_system_init 01A5                       l134 00A6                       l152 016E  
                     l129 01A4                       l147 0164                       l155 019C  
                     _GIE 005F                       u430 015E                       u431 015D  
                     u440 016E                       u441 016D                       u450 001F  
            __CFG_CPD$OFF 0000                       u451 001E                       u460 0065  
                     u445 016A                       u461 0064                       u470 011D  
                     u471 011C                       u480 0138                       u481 0137  
                     u485 0134                       _isr 00A7              __CFG_LVP$OFF 0000  
                    l1201 0148                      l1211 015E                      l1203 014D  
                    l1213 0189                      l1221 01A0                      l1231 0039  
                    l1223 001A                      l1215 0195                      l1209 014F  
                    l1241 0065                      l1233 003D                      l1225 001F  
                    l1217 0196                      l1251 0090                      l1243 0069  
                    l1235 004A                      l1227 0023                      l1219 019D  
                    l1253 0099                      l1245 0072                      l1237 0053  
                    l1229 002C                      l1247 007F                      l1239 0060  
                    l1191 017F                      l1271 0138                      l1255 010C  
                    l1249 0083                      l1193 0180                      l1265 011F  
                    l1273 0141                      l1257 0116                      l1195 0181  
                    l1187 0170                      l1267 0125                      l1259 011D  
                    l1197 0182                      l1189 017E                      l1269 012B  
                    l1199 0185                      ?_isr 0070                      _PEIE 005E  
            __CFG_WRT$OFF 0000                      _dato 0079                      _main 010C  
                    btemp 007E                      start 000C             __CFG_IESO$OFF 0000  
                   ??_isr 0070                     ?_main 0070             __CFG_WDTE$OFF 0000  
                   _ANSEL 0188                     i1l110 0102                     i1l112 00FC  
                   i1l106 00E1                     i1l107 00D1                     i1l115 0105  
                   u30_20 00B8                     u30_21 00B7                     u31_20 00C5  
                   u31_21 00C4                     u32_20 00C9                     u32_21 00C8  
                   u33_20 00D7                     u33_21 00D6                     u34_20 00E5  
                   u34_21 00E4                     u35_20 00E9                     u35_21 00E8  
                   _PORTB 0006                     _PORTD 0008                     u36_20 0102  
                   u28_20 00AD                     u36_21 0101                     u28_21 00AC  
                   u29_20 00B4                     u29_21 00B3                     u53_27 00DD  
                   u54_27 00F9                     _TRISB 0086                     _TRISD 0088  
                   _SSPIE 0463                     _SSPIF 0063            __CFG_FCMEN$OFF 0000  
                   _coso2 0078                     _setup 0189                     main@i 0076  
          __CFG_BOREN$OFF 0000                     pclath 000A                     status 0003  
                   wtemp0 007E            __CFG_MCLRE$OFF 0000           __initialization 000F  
             _system_init 019D              __end_of_main 0148                    ??_main 0076  
                  _ADRESH 001E                    ?_setup 0070                    _ANSELH 0189  
                  i1l1061 00B4                    i1l1071 00BF                    i1l1063 00B8  
                  i1l1081 00D7                    i1l1073 00C5                    i1l1065 00BC  
                  i1l1057 00A7                    i1l1083 00E5                    i1l1075 00C9  
                  i1l1067 00BD                    i1l1059 00AD                    i1l1085 00E9  
                  i1l1077 00CF                    i1l1069 00BE                    i1l1087 00EF  
                  i1l1079 00D0                    i1l1089 00F6                    _SSPADD 0093  
                  _SSPCON 0014                    _SSPBUF 0013            __CFG_PWRTE$OFF 0000  
        __end_of_ms_delay 016F                    saved_w 007E   __end_of__initialization 0015  
     full_drive@direction 0075            __pcstackCOMMON 0070   __size_of_I2C_Slave_Init 001A  
           __end_of_setup 019D               ms_delay@val 0073                   ??_setup 0074  
   I2C_Slave_Init@address 0073                __pbssBANK0 0024                __pmaintext 010C  
              __pintentry 0004                   _SSPCON2 0091                   _SSPSTAT 0094  
               ?_ms_delay 0073              ?_system_init 0070                _full_drive 0019  
                 __ptext1 019D                   __ptext2 0189                   __ptext3 016F  
                 __ptext4 0019                   __ptext5 0148                   __ptext6 00A7  
            __size_of_isr 0065      end_of_initialization 0015                ??_ms_delay 0075  
          _I2C_Slave_Init 016F                 _PORTBbits 0006                 _TRISCbits 0087  
  __end_of_I2C_Slave_Init 0189               ?_full_drive 0070       start_initialization 000F  
             __end_of_isr 010C  __CFG_FOSC$INTRC_NOCLKOUT 0000           ?_I2C_Slave_Init 0070  
    __size_of_system_init 0008               __pbssCOMMON 0078                 ___latbits 0002  
           __pcstackBANK0 0020       __size_of_full_drive 008E         __size_of_ms_delay 0027  
          __size_of_setup 0014         interrupt_function 0004                  _PIR1bits 000C  
            ??_full_drive 0075                 ms_delay@i 0020                 ms_delay@j 0022  
       __CFG_BOR4V$BOR40V 0000          ??_I2C_Slave_Init 0073             __size_of_main 003C  
      __end_of_full_drive 00A7                  _ms_delay 0148                  intlevel1 0000  
           ??_system_init 0073               _SSPCON2bits 0091                _SSPCONbits 0014  
